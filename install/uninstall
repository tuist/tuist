#!/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby
# frozen_string_literal: true

require 'English'
require 'fileutils'
require 'pathname'

# global status to indicate whether there is anything wrong.
@failed = false

module Tty
  extend self

  def blue
    bold(34)
  end

  def red
    bold(31)
  end

  def reset
    escape(0)
  end

  def bold(code = 39)
    escape("1;#{code}")
  end

  def escape(code)
    "\033[#{code}m" if STDOUT.tty?
  end
end

class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map { |arg| arg.gsub(' ', '\\ ') }.unshift(first).join(' ')
  end
end

class Pathname
  def resolved_path
    symlink? ? dirname + readlink : self
  end

  def /(other)
    self + other.to_s
  end

  def pretty_print
    if symlink?
      puts to_s + ' -> ' + resolved_path.to_s
    elsif directory?
      puts to_s + '/'
    else
      puts to_s
    end
  end
end

def ohai(*args)
  puts "#{Tty.blue}==>#{Tty.bold} #{args.shell_s}#{Tty.reset}"
end

def warn(warning)
  puts "#{Tty.red}Warning#{Tty.reset}: #{warning.chomp}"
end

def system(*args)
  return if Kernel.system(*args)

  warn("Failed during: #{args.shell_s}")
  @failed = true
end

ohai('Uninstalling Tuist')
system('rm', '-rf', '/usr/local/bin/tuist')
system('rm', '-rf', File.join(Dir.home, '.tuist'))

ohai('Tuist uninstalled')
