server {
    listen 80;
    listen [::]:80;

    server_name cache-eu-central-staging.tuist.dev;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name cache-eu-central-staging.tuist.dev;

    ssl_certificate /etc/letsencrypt/live/cache-eu-central-staging.tuist.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cache-eu-central-staging.tuist.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/cache-eu-central-staging.tuist.dev/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;

    ssl_stapling on;
    ssl_stapling_verify on;

    # Docker DNS resolver
    resolver 127.0.0.11 valid=30s;

    # Client body size for large uploads
    client_max_body_size 0;
    client_body_timeout 30m;

    # Timeouts for large file uploads/downloads
    proxy_connect_timeout 30m;
    proxy_send_timeout 30m;
    proxy_read_timeout 30m;
    send_timeout 30m;

    # Disable buffering for streaming
    proxy_buffering off;
    proxy_request_buffering off;

    # Internal location for X-Accel-Redirect
    location /internal-cas/ {
        internal;
        alias /data/cas/;

        # Disable access log for performance
        access_log off;

        # Send files efficiently
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        # No caching headers (content-addressable, so safe to cache forever if needed)
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Proxy all other requests to Phoenix app
    location / {
        set $upstream_app cache-app;
        proxy_pass http://$upstream_app:4000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Compression for text responses only
        gzip on;
        gzip_vary on;
        gzip_types application/json text/plain text/css application/javascript text/xml application/xml;
        gzip_comp_level 6;
    }
}
