type Account {
  id: ID!
  name: String!
}

type Mutation {
  """
  An example field added by the generator
  """
  testField: String!
}

type Organization {
  id: ID!
  name: String!
}

type Project {
  id: ID!
  name: String!
}

type Query {
  """
  Returns all tied accounts for the authenticated user
  """
  accounts: [Account!]!

  """
  Returns the authenticated user
  """
  me: User!

  """
  Returns all available organizations for the authenticated user
  """
  organizations: [Organization!]!

  """
  Returns all available projects for the authenticated user
  """
  projects: [Project!]!
}

type User {
  avatarUrl: String
  email: String!
  id: ID!
  organizations: [Organization!]!
  projects: [Project!]!
}
