type Mutation {
  """
  Create a new organization
  """
  organizationCreate(
    """
    Parameters for OrganizationCreate
    """
    input: OrganizationCreateInput!
  ): OrganizationCreatePayload
}

type Organization {
  id: String!
  name: String!
}

"""
Autogenerated input type of OrganizationCreate
"""
input OrganizationCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The name of the organization
  """
  name: String!
}

"""
Autogenerated return type of OrganizationCreate
"""
type OrganizationCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A list of errors if the creation of the organization failed
  """
  errors: [String!]!

  """
  The created organization
  """
  organization: Organization
}

type Query {
  """
  Returns the authenticated user.
  """
  me: User!
}

type User {
  avatarUrl: String!
  email: String!
  id: String!
}
