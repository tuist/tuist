name: Meta Tuist

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - Tuist/**
      - Package.resolved
      - Gemfile*
      - Package.swift
      - Project.swift
      - Sources/**
      - Tests/**
      - projects/tuist/features/**
      - projects/tuist/fixtures/**
      - .package.resolved
      - projects/fourier/**
      - .github/workflows/meta-tuist.yml

concurrency:
  group: meta-tuist-${{ github.head_ref }}
  cancel-in-progress: true

env:
  RUBY_VERSION: '3.0.3'
  TUIST_STATS_OPT_OUT: true
  TUIST_CONFIG_CLOUD_TOKEN: ${{ secrets.TUIST_CONFIG_CLOUD_TOKEN }}

jobs:
  build:
    name: Build with Xcode
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Build
        run: |
          ./fourier build tuist all
          
  generate:
    name: Generate with Xcode
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - name: Fetch dependencies
        run: make tuist/fetch
      - name: Generate project
        run:  ARGS="--no-open tuist" make tuist/generate

  generate-with-cloud:
    name: Generate with Xcode and TuistCloud
    runs-on: macos-13
    env:
      TUIST_INCLUDE_TUIST_CLOUD: 1
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - uses: actions/checkout@v3
        name: Clone tuist/TuistCloud
        with:
          repository: tuist/TuistCloud
          token: ${{ secrets.TUIST_GITHUB_PAT_TOKEN }}
          path: TuistCloud
          fetch-depth: 0
      - name: Up the workspace
        run: make workspace/up
      - name: Fetch dependencies
        run: make tuist/fetch
      - name: Generate the project
        run: ARGS="--no-open tuist" make tuist/generate

  test:
    name: Test with Xcode
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Test
        run: |
          ./fourier test tuist unit
  
  lint-lockfiles:
    name: Lint lockfiles
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Run
        run: make workspace/lint/lockfiles

  cache-warm:
    name: Cache warm
    runs-on: macos-13
    env:
      TUIST_INCLUDE_TUIST_CLOUD: 1
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - uses: actions/cache@v3
        name: 'Cache Tuist .build folder'
        with:
          path: .build
          key: ${{ runner.os }}-${{ hashFiles('.xcode-version') }}-spm-${{ hashFiles('Package.resolved') }}-git-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('.xcode-version') }}-spm-${{ hashFiles('Package.resolved') }}
            ${{ runner.os }}-${{ hashFiles('.xcode-version') }}-spm
      - uses: actions/checkout@v3
        with:
          repository: tuist/TuistCloud
          token: ${{ secrets.TUIST_GITHUB_PAT_TOKEN }}
          path: TuistCloud
          fetch-depth: 0
      - name: Cache warm
        run: |
          make workspace/up
          make tuist/fetch
          make tuist/cache-warm