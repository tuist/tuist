name: App

on:
  push:
    branches:
      - main
    paths:
      - "app/**"
      - ".github/workflows/app.yml"
      - "Tuist/**"
  pull_request:
    paths:
      - "app/**"
      - ".github/workflows/app.yml"
      - "Tuist/**"

permissions:
  contents: read

env:
  TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_CONFIG_TOKEN }}
  MISE_SOPS_AGE_KEY: ${{ secrets.MISE_SOPS_AGE_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: app-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  check-team-membership:
    name: Check Team Membership
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      is-team-member: ${{ steps.check.outputs.is-member }}
    steps:
      - name: Check if author is team member
        id: check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TUIST_GITHUB_TOKEN || github.token }}
          script: |
            // If TUIST_GITHUB_TOKEN is not available (e.g., from a fork), treat as non-member
            const token = '${{ secrets.TUIST_GITHUB_TOKEN }}';
            if (!token || token === '') {
              console.log(`Running from fork - treating ${context.payload.pull_request.user.login} as non-member`);
              core.setOutput('is-member', 'false');
              return;
            }

            try {
              const { data: membership } = await github.rest.teams.getMembershipForUserInOrg({
                org: 'tuist',
                team_slug: 'engineering',
                username: context.payload.pull_request.user.login
              });
              console.log(`User ${context.payload.pull_request.user.login} is a member of @tuist/engineering`);
              core.setOutput('is-member', 'true');
            } catch (error) {
              if (error.status === 404) {
                console.log(`User ${context.payload.pull_request.user.login} is NOT a member of @tuist/engineering`);
                core.setOutput('is-member', 'false');
              } else {
                throw error;
              }
            }
  app-build:
    name: Build
    runs-on: macos-15
    needs: [check-team-membership]
    if: |
      always() &&
      !cancelled() &&
      !contains(needs.*.result, 'failure')
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - name: Skip Xcode Macro Fingerprint Validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Skip Xcode Package Validation
        run: defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidation -bool YES
      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .build
          key: ${{ runner.os }}-app-${{ hashFiles('Package.resolved') }}
          restore-keys: .build
      - uses: jdx/mise-action@v2
      - run: tuist install
      - name: Generate TuistApp
        run: mise x -- tuist generate TuistApp
      - name: Build TuistApp
        run: mise x -- tuist xcodebuild build -scheme TuistApp -destination "generic/platform=iOS Simulator" -workspace Tuist.xcworkspace CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ARCHS="arm64"
      - name: Share TuistApp
        if: |
          github.event_name == 'push' ||
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'pull_request' && needs.check-team-membership.outputs.is-team-member == 'true')
        run: mise x -- tuist share TuistApp
      - name: Save cache
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: .build
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

  app-test:
    name: Test
    runs-on: macos-15
    needs: [check-team-membership]
    if: |
      always() &&
      !cancelled() &&
      !contains(needs.*.result, 'failure')
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - name: Skip Xcode Macro Fingerprint Validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Skip Xcode Package Validation
        run: defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidation -bool YES
      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .build
          key: ${{ runner.os }}-app-${{ hashFiles('Package.resolved') }}
          restore-keys: .build
      - uses: jdx/mise-action@v2
      - run: tuist install
      - name: Test TuistApp
        run: mise x -- tuist test TuistApp -- CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
      - name: Save cache
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: .build
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

  app-device-build:
    name: Device Build
    runs-on: macos-15
    needs: [check-team-membership]
    if: |
      always() &&
      !cancelled() &&
      !contains(needs.*.result, 'failure')
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - name: Skip Xcode Macro Fingerprint Validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Skip Xcode Package Validation
        run: defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidation -bool YES
      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .build
          key: ${{ runner.os }}-app-${{ hashFiles('Package.resolved') }}
          restore-keys: .build
      - uses: jdx/mise-action@v2
      - run: tuist install
      - name: Generate TuistApp
        run: mise x -- tuist generate TuistApp
      - name: Bundle iOS app
        if: |
          github.event_name == 'push' ||
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'pull_request' && needs.check-team-membership.outputs.is-team-member == 'true')
        run: mise run app:bundle-ios
      - name: Inspect TuistApp
        if: |
          github.event_name == 'push' ||
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'pull_request' && needs.check-team-membership.outputs.is-team-member == 'true')
        run: mise x -- tuist inspect bundle build/Tuist.ipa
      - name: Share TuistApp
        if: |
          github.event_name == 'push' ||
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'pull_request' && needs.check-team-membership.outputs.is-team-member == 'true')
        run: mise x -- tuist share build/Tuist.ipa
      - name: Save cache
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: .build
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
