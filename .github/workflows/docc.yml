# Build and deploy DocC to GitHub pages. Based off of Pointfree's work here:
# https://github.com/pointfreeco/swift-parsing/blob/main/.github/workflows/documentation.yml
name: Docc

on:
  release:
    types:
      - published
  push:
    branches:
      - main

concurrency:
  group: docc-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Package
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download Swift 5.5.1
        run: wget -q https://download.swift.org/swift-5.5.1-release/ubuntu2004/swift-5.5.1-RELEASE/swift-5.5.1-RELEASE-ubuntu20.04.tar.gz
      - name: Extract Swift 5.5.1
        run: tar xzf swift-5.5.1-RELEASE-ubuntu20.04.tar.gz
      - name: Add Swift toolchain to PATH
        run: |
          echo "$GITHUB_WORKSPACE/swift-5.5.1-RELEASE-ubuntu20.04/usr/bin" >> $GITHUB_PATH
      - name: Checkout swift-docc
        uses: actions/checkout@v2
        with:
          repository: apple/swift-docc
          ref: main
          path: swift-docc
      - name: Cache DocC
        id: cache-docc
        uses: actions/cache@v2
        with:
          key: swift-url-docc-build
          path: swift-docc/.build
      - name: Build swift-docc
        if: ${{ !steps.cache-docc.outputs.cache-hit }}
        run: |
          cd swift-docc; swift build --product docc -c release; cd ..
      - name: Checkout swift-docc-render
        uses: actions/checkout@v2
        with:
          repository: apple/swift-docc-render
          ref: main
          path: swift-docc-render
      - name: Build swift-docc-render
        run: |
          cd swift-docc-render; npm install && npm run build; cd ..
      - name: Checkout gh-pages Branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: docs-out
      - name: Build documentation
        run: >
          rm -rf docs-out/.git;
          rm -rf docs-out/main;
          rm -rf docs-out/latest;
          for tag in $(echo "main"; echo "latest"; git tag | tail -n +94);
          do
            echo "⏳ Generating documentation for "$tag" release.";
            
            if [ -d "docs-out/$tag" ] 
            then 
                echo "✅ Documentation for "$tag" already exists.";
            else 
                if [ "$tag" == "latest" ]; then
                  git checkout -f "$(git tag | tail -n 1)";
                else
                  git checkout -f "$tag";
                fi
                mkdir -p Sources/ProjectDescription/Documentation.docc;
                export DOCC_HTML_DIR="$(pwd)/swift-docc-render/dist";
                rm -rf .build;
                mkdir -p .build/symbol-graphs;
                swift build \
                  --target ProjectDescription \
                  -Xswiftc \
                  -emit-symbol-graph \
                  -Xswiftc \
                  -emit-symbol-graph-dir \
                  -Xswiftc \
                  .build/symbol-graphs \
                  && swift-docc/.build/release/docc convert Sources/ProjectDescription/Documentation.docc \
                    --fallback-display-name ProjectDescription \
                    --fallback-bundle-identifier io.tuist.ProjectDescription \
                    --fallback-bundle-version 0.0.0 \
                    --additional-symbol-graph-dir \
                    .build/symbol-graphs \
                    --transform-for-static-hosting \
                    --hosting-base-path /tuist/"$tag" \
                    --output-path docs-out/"$tag" \
                    && echo "✅ Documentation generated for "$tag" release." \
                    || echo "⚠️ Documentation skipped for "$tag".";
            fi;
          done
      
      - name: Fix permissions
        run: 'sudo chown --recursive $USER docs-out'
      - name: Publish documentation to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: docs-out
          single-commit: true
