name: Cloud

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - projects/cloud/**
      - projects/fourier/**
      - .github/workflows/cloud.yml

env:
  RAILS_ENV: test
  RAILS_MASTER_KEY: 09a0926fc36e14a27bcc96e7f9323d05
  RUBY_VERSION: 3.0.3
  NODE_VERSION: 16.17.0

concurrency:
  group: cloud-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:4.0.6
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs=4 --retry=3
      - name: Set up database (to detect schema breaking changes)
        working-directory: projects/cloud
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create
          bundle exec rails db:schema:load
      - name: Increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Test
        working-directory: projects/cloud
        run: |
          bundle exec rails test
  lint:
    name: Lint
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_$(cat .xcode-version).app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run
        run: ./fourier lint cloud
  assets_precompile:
    name: Assets precompile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('projects/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('projects/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs=4 --retry=3
          npm install
      - name: Assets precompile
        working-directory: projects/cloud
        run: |
          bundle exec rails assets:precompile
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('projects/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          npm install
      - name: ESLint
        working-directory: projects/cloud
        run: |
          npm run lint
  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('projects/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          npm install
      - name: Typecheck
        working-directory: projects/cloud
        run: |
          npm run tsc
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('projects/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          npm install
      - name: Prettier
        working-directory: projects/cloud
        run: |
          npm run format --check
  jest:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('project/cloud/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('projects/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        working-directory: projects/cloud
        run: |
          npm install
      - name: Jest
        working-directory: projects/cloud
        run: |
          npm run test
