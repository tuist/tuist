name: Tuist

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - Gemfile*
      - Package.swift
      - Package.resolved
      - Sources/**
      - Tests/**
      - features/**

env:
  RUBY_VERSION: '2.7.2'

jobs:
  unit_tests:
    name: Unit tests with Xcode ${{ matrix.xcode }}
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ['11.5', '12.3']
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - uses: actions/cache@v2
        name: 'Cache SPM dependencies'
        with:
          path: .build
          key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.xcode }}-spm-
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run tests
        run: |
          ./bin/fourier test tuist unit
  release_build:
    name: Release build with Xcode ${{ matrix.xcode }}
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ['11.5', '12.3']
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.xcode }}-spm-
      - name: Build Tuist for release
        run: swift build -c release --product tuist
      - name: Build Tuistenv for release
        run: swift build -c release --product tuistenv
  acceptance_tests:
    name: ${{ matrix.feature }} acceptance tests with Xcode ${{ matrix.xcode }}
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ['12.3']
        feature:
          [
            'generate-1',
            'generate-2',
            'generate-3',
            'generate-4',
            'generate-5',
            'generate-6',
            'generate-7',
            'init',
            'lint-project',
            'lint-code',
            'scaffold',
            'up',
            'build',
            'test',
            'env',
            'cache-xcframeworks',
            'cache-frameworks',
            'precompiled',
            'dependencies',
          ]
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - uses: actions/cache@v2
        name: 'Cache SPM dependencies'
        with:
          path: .build
          key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run tests
        run: ./bin/fourier test tuist acceptance features/${{ matrix.feature }}.feature
