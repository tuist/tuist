name: Tuist

on:
  push:
    branches:
      - master
    paths:
      - Sources/**/*
      - Tests/**/*
      - fixtures/**/*
      - .github/workflows/tuist.yml
      - Package.swift
      - Package.resolved
  pull_request:
    paths:
      - Sources/**/*
      - Tests/**/*
      - fixtures/**/*
      - .github/workflows/tuist.yml
      - Package.swift
      - Package.resolved

jobs:
  unit_tests:
    name: Unit tests
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ['11.5', '12_beta']
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Run tests
        run: |
          rm -rf .coverage
          mkdir -p .coverage
          swift test --enable-code-coverage
  performance_tests:
    name: Performance tests
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ["11.5"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          path: reference_branch
          ref: master
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Record baseline measurements
        run: |
            cd reference_branch
            TEST_RECORD_BASELINES=1 swift test -c release --filter "PerformanceTests" -Xswiftc -enable-testing
      - name: Copy baselines measurements
        run: |
            cp -r reference_branch/performance_tests_baselines performance_tests_baselines
      - name: Run performance tests
        run: |
          swift test -c release --filter "PerformanceTests" -Xswiftc -enable-testing
  release_build:
    name: Release build
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ['11.5']
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Build Tuist for release
        run: swift build -c release --product tuist
      - name: Build Tuistenv for release
        run: swift build -c release --product tuistenv
  acceptance_tests:
    name: Acceptance tests (${{ matrix.feature }})
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ['11.5']
        feature:
          [
            'generate-1',
            'generate-2',
            'generate-3',
            'generate-4',
            'generate-5',
            'generate-6',
            'init',
            'lint',
            'scaffold',
            'up',
            'build',
          ]
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - name: Install Bundler 2.0.2
        run: gem install bundler --version 2.0.2
      - name: Install Bundler dependencies
        run: bundle install
      - name: Run tests
        run: FEATURE=features/${{ matrix.feature }}.feature bundle exec rake features
  cache_acceptance_tests:
    name: Cache Acceptance tests (${{ matrix.feature }})
    runs-on: macOS-latest
    strategy:
      matrix:
        xcode: ['12_beta']
        feature: ['cache']
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - name: Install Bundler 2.0.2
        run: gem install bundler --version 2.0.2
      - name: Install Bundler dependencies
        run: bundle install
      - name: Run tests
        run: FEATURE=features/${{ matrix.feature }}.feature bundle exec rake features

  upload:
    if: github.ref == 'refs/heads/master'
    name: Upload
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode 11.4
        run: sudo xcode-select -switch /Applications/Xcode_11.5.app
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - name: Install Bundler 2.0.2
        run: gem install bundler --version 2.0.2
      - name: Install Bundler dependencies
        run: bundle install
      - name: Package build and upload it to GCS
        run: |
          bundle exec rake package_commit
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
