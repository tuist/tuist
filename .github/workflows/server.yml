name: Server

on:
  push:
    branches:
      - main
    paths:
      - server/**
      - .github/workflows/server.yml
      - server/pnpm-lock.yaml
  pull_request:
    paths:
      - server/**
      - .github/workflows/server.yml
      - server/pnpm-lock.yaml
  merge_group: {}

permissions:
  contents: read

concurrency:
  group: tuist-server-${{ github.head_ref }}
  cancel-in-progress: true

env:
  MIX_ENV: test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PNPM_HOME: ~/.pnpm
  MISE_SOPS_AGE_KEY: ${{ secrets.MISE_SOPS_AGE_KEY }}

defaults:
  run:
    working-directory: server

jobs:
  test:
    name: Test
    runs-on: namespace-profile-default
    timeout-minutes: 15
    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - run: mise run clickhouse:start
      - run: mise run db:reset
      - name: Run tests
        run: mix test --warnings-as-errors
  credo:
    name: Credo
    runs-on: namespace-profile-default
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - name: Run Credo
        run: mix credo
  format:
    name: Format
    runs-on: namespace-profile-default
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - name: Check format
        run: mise run format --check
  esbuild:
    name: esbuild
    runs-on: namespace-profile-default
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4 # v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - name: Install esbuild
        run: mix esbuild.install
      - name: Check esbuild output
        run: |
          # Run esbuild and capture output
          output=$(mix esbuild app --log-level=warning 2>&1 || true)

          # Filter out known non-warning messages
          warnings=$(echo "$output" | grep -v "^==> " | grep -v "^Compiling" | grep -v "^Generated" | grep -v "Downloading esbuild" | grep -v "^$" || true)

          if [ -z "$warnings" ]; then
            echo "No esbuild warnings detected."
            exit 0
          else
            echo "::error title=esbuild warnings detected::asset build has warnings."
            echo "$warnings"
            exit 1
          fi
  security:
    name: Security
    runs-on: namespace-profile-default
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - name: Check
        run: mise run security
  docker_build:
    name: Docker build
    runs-on: namespace-profile-default
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - name: Restore Mix Cache
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      # We move it so that we can copy it inside the Docker image for
      # reproducibility of dependency resolution.
      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: false
          tags: tuist/tuist
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TUIST_HOSTED=0
            TUIST_VERSION=1.24.11.11
            MIX_ENV=prod
  api-codegen:
    name: API Codegen Check
    runs-on: namespace-profile-default
    timeout-minutes: 15
    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - run: mise run clickhouse:start
      - run: mise run db:reset
      - name: Generate OpenAPI spec
        run: MIX_ENV=dev mix openapi.spec.yaml --spec TuistWeb.API.Spec ../cli/Sources/TuistServer/OpenAPI/server.yml
      - name: Check for uncommitted changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error title=OpenAPI spec out of sync::The generated OpenAPI spec is not up-to-date. Please run 'mise run generate-api-cli-code' in the server directory and commit the changes."
            echo "Changed files:"
            git status --porcelain
            echo "Diff:"
            git diff
            exit 1
          else
            echo "âœ… Generated OpenAPI spec is up-to-date"
          fi
  seed:
    name: Seed
    runs-on: namespace-profile-default
    timeout-minutes: 15
    services:
      postgres:
        image: timescale/timescaledb-ha:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Restore Mix Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v3.2.0
        with:
          cache_key: "{{default}}-{{env.NSC_BASE_IMAGE_REF_ID}}"
      - run: mise run install
      - run: mise run clickhouse:start
      - run: mise run db:reset
      - name: Run migrations
        run: mix ecto.migrate
      - name: Seed the database
        run: mix run priv/repo/seeds.exs
