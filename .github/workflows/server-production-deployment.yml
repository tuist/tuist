name: Server Production Deployment

on:
  push:
    branches:
      - main
    paths:
      - server/**
      - .github/workflows/server-production-deployment.yml
      - server/pnpm-lock.yaml

  workflow_dispatch:
    inputs:
      commit_sha:
        description: The commit SHA to deploy. When not passed, it deploys the latest commit available in `main`.
        required: false

permissions:
  contents: read

concurrency:
  group: server-production-deployment-${{ github.head_ref }}
  cancel-in-progress: true

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_EXT_CONFIG_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PNPM_HOME: ~/.pnpm
  MISE_SOPS_AGE_KEY: ${{ secrets.MISE_SOPS_AGE_KEY }}

jobs:
  canary:
    environment: server-canary
    name: Canary Deployment
    env:
      DOCKER_BUILDKIT: 1
    runs-on: namespace-profile-default
    defaults:
      run:
        working-directory: server
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha == '' }}
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha != '' }}
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - name: Restore Mix Cache
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('server/mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v2
      - run: mise run install
      - name: "Get version"
        id: version
        run: |
          version=$(./mise/tasks/generate-version.sh)
          echo "::set-output name=version::$version"
      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - name: Fly
      #   run: flyctl deploy -c fly.canary.toml --build-arg TUIST_HOSTED=1 --build-arg MIX_ENV=can --build-arg APP_REVISION=$GITHUB_SHA --build-arg TUIST_VERSION=${{ steps.version.outputs.version }} --wait-timeout 3600
  acceptance-tests:
    name: Acceptance Tests
    runs-on: namespace-profile-default-macos
    timeout-minutes: 40
    needs: canary
    environment: server-canary
    steps:
      - uses: actions/checkout@v4
        with:
          repository: tuist/cli-ext
          token: ${{ secrets.TUIST_RELEASE_GITHUB_TOKEN }}
          path: "cli-ext"
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.3.app
      - uses: actions/cache@v3
        name: "Cache installed dependencies folder"
        with:
          path: cli-ext/.build
          key: spm-ext-v1-${{ hashFiles('cli-ext/Package.resolved') }}
          restore-keys: spm-ext-v1-${{ hashFiles('cli-ext/Package.resolved') }}
      - uses: jdx/mise-action@v2
        with:
          working_directory: cli-ext
      - name: Install dependencies
        working-directory: cli-ext
        run: tuist install
      # - name: Test
      #   working-directory: cli-ext
      #   run: tuist test TuistExtKitCanaryAcceptanceTests --no-selective-testing --test-targets TuistExtKitCanaryAcceptanceTests/TuistExtKitCanaryAcceptanceTestWithIOSAppWithFrameworks
  production:
    environment: server-production
    name: Production Deployment
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      DOCKER_BUILDKIT: 1
    runs-on: namespace-profile-default
    timeout-minutes: 60
    if: ${{ !contains(github.event.head_commit.message, '(hotfix)') }}
    needs: acceptance-tests
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha == '' }}
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha != '' }}
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - name: Restore Mix Cache
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('server/mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v2
      - run: mise run install
      - name: "Get version"
        id: version
        run: |
          version=$(./mise/tasks/generate-version.sh)
          echo "::set-output name=version::$version"
      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - name: Fly
      #   run: flyctl deploy -c fly.prod.toml --build-arg TUIST_HOSTED=1 --build-arg MIX_ENV=prod --build-arg TUIST_VERSION=${{ steps.version.outputs.version }} --build-arg APP_REVISION=$GITHUB_SHA --wait-timeout 3600
      # - name: Notify about the deployment in Slack
      #   uses: slackapi/slack-github-action@v2.0.0
      #   with:
      #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     webhook-type: webhook-trigger
      #     payload: |
      #       commit: "${{ github.sha }}"
      #       environment: "production"
  production-hotfix:
    environment: server-production
    name: Hotfix Production Deployment
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      DOCKER_BUILDKIT: 1
    runs-on: namespace-profile-default
    timeout-minutes: 60
    if: ${{ contains(github.event.head_commit.message, '(hotfix)') }}
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha == '' }}
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.commit_sha != '' }}
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - name: Restore Mix Cache
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: mix-${{ hashFiles('server/mix.lock') }}
      - name: Restore PNPM Cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm/store
          key: pnpm-server-${{ hashFiles('server/pnpm-lock.yaml') }}
      - uses: jdx/mise-action@v2
      - run: mise run install
      - name: "Get version"
        id: version
        run: |
          version=$(./mise/tasks/generate-version.sh)
          echo "::set-output name=version::$version"
      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - name: Fly
      #   run: flyctl deploy --local-only -c fly.prod.toml --build-arg TUIST_HOSTED=1 --build-arg MIX_ENV=prod --build-arg TUIST_VERSION=${{ steps.version.outputs.version }} --build-arg APP_REVISION=$GITHUB_SHA --wait-timeout 3600
      # - name: Notify about the deployment in Slack
      #   uses: slackapi/slack-github-action@v2.0.0
      #   with:
      #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     webhook-type: webhook-trigger
      #     payload: |
      #       commit: "${{ github.sha }}"
      #       environment: "production"
