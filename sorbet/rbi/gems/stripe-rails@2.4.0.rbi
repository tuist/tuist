# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `stripe-rails` gem.
# Please instead update this file by running `bin/tapioca gem stripe-rails`.

# source://stripe-rails//lib/stripe/current_api_version.rb#1
class CurrentApiVersion
  class << self
    # @return [Boolean]
    #
    # source://stripe-rails//lib/stripe/current_api_version.rb#9
    def after_switch_to_products_in_plans?; end

    # source://stripe-rails//lib/stripe/current_api_version.rb#2
    def call; end
  end
end

# source://stripe-rails//lib/stripe/rails/version.rb#1
module Stripe
  extend ::Stripe::ConfigurationBuilder
  extend ::Stripe::Plans
  extend ::Stripe::Prices
  extend ::Stripe::Coupons
  extend ::Stripe::Products

  class << self
    # source://forwardable/1.3.3/forwardable.rb#231
    def api_base(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def api_base=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def api_key(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def api_key=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def api_version(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def api_version=(*args, **_arg1, &block); end

    # source://stripe/8.6.0/lib/stripe.rb#97
    def app_info; end

    # source://stripe/8.6.0/lib/stripe.rb#101
    def app_info=(info); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def ca_bundle_path(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def ca_bundle_path=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def ca_store(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def client_id(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def client_id=(*args, **_arg1, &block); end

    # source://stripe/8.6.0/lib/stripe.rb#68
    def config; end

    # source://forwardable/1.3.3/forwardable.rb#231
    def connect_base(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def connect_base=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def enable_telemetry=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def enable_telemetry?(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def initial_network_retry_delay(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def log_level(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def log_level=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def logger(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def logger=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def max_network_retries(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def max_network_retries=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def max_network_retry_delay(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def open_timeout(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def open_timeout=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def proxy(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def proxy=(*args, **_arg1, &block); end

    # source://railties/7.1.1/lib/rails/engine.rb#405
    def railtie_helpers_paths; end

    # source://railties/7.1.1/lib/rails/engine.rb#394
    def railtie_namespace; end

    # source://railties/7.1.1/lib/rails/engine.rb#409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def read_timeout(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def read_timeout=(*args, **_arg1, &block); end

    # source://stripe/8.6.0/lib/stripe.rb#110
    def set_app_info(name, partner_id: T.unsafe(nil), url: T.unsafe(nil), version: T.unsafe(nil)); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def stripe_account(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def stripe_account=(*args, **_arg1, &block); end

    # source://railties/7.1.1/lib/rails/engine.rb#397
    def table_name_prefix; end

    # source://forwardable/1.3.3/forwardable.rb#231
    def uploads_base(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def uploads_base=(*args, **_arg1, &block); end

    # source://railties/7.1.1/lib/rails/engine.rb#401
    def use_relative_model_naming?; end

    # source://forwardable/1.3.3/forwardable.rb#231
    def verify_ssl_certs(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def verify_ssl_certs=(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def write_timeout(*args, **_arg1, &block); end

    # source://forwardable/1.3.3/forwardable.rb#231
    def write_timeout=(*args, **_arg1, &block); end
  end
end

class Stripe::ApplicationController < ::ActionController::Base
  private

  # source://actionview/7.1.1/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.1.1/lib/action_controller/metal.rb#262
    def middleware_stack; end
  end
end

# source://stripe-rails//lib/stripe/callbacks/builder.rb#2
module Stripe::Callbacks
  include ::Stripe::Callbacks::Builder
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::Stripe::Callbacks::Builder::ClassMethods

  class << self
    # source://stripe-rails//lib/stripe/callbacks.rb#131
    def _run_callbacks(type, evt, target); end

    # source://stripe-rails//lib/stripe/callbacks/builder.rb#25
    def callback(name); end

    # source://stripe-rails//lib/stripe/callbacks/builder.rb#36
    def callback_matcher(options, block); end

    # source://stripe-rails//lib/stripe/callbacks/builder.rb#20
    def clear_callbacks!; end

    # source://stripe-rails//lib/stripe/callbacks/builder.rb#18
    def critical_callbacks; end

    # source://stripe-rails//lib/stripe/callbacks/builder.rb#18
    def noncritical_callbacks; end

    # source://stripe-rails//lib/stripe/callbacks.rb#126
    def run_callbacks(evt, target); end

    # source://stripe-rails//lib/stripe/callbacks.rb#136
    def run_critical_callbacks(type, evt, target); end

    # source://stripe-rails//lib/stripe/callbacks.rb#142
    def run_noncritical_callbacks(type, evt, target); end
  end
end

# source://stripe-rails//lib/stripe/callbacks/builder.rb#3
module Stripe::Callbacks::Builder
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::Stripe::Callbacks::Builder::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Concern
end

# source://stripe-rails//lib/stripe/callbacks.rb#0
module Stripe::Callbacks::Builder::ClassMethods
  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_account_application_deauthorized(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_account_application_deauthorized!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_account_external_account_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_account_external_account_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_account_external_account_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_account_external_account_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_account_external_account_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_account_external_account_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_account_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_account_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_application_fee_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_application_fee_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_application_fee_refund_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_application_fee_refund_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_application_fee_refunded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_application_fee_refunded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_balance_available(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_balance_available!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_captured(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_captured!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_dispute_closed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_dispute_closed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_dispute_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_dispute_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_dispute_funds_reinstated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_dispute_funds_reinstated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_dispute_funds_withdrawn(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_dispute_funds_withdrawn!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_dispute_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_dispute_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_pending(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_pending!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_refund_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_refund_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_refunded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_refunded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_succeeded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_succeeded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_charge_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_charge_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_checkout_session_completed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_checkout_session_completed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_checkout_session_expired(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_checkout_session_expired!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_coupon_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_coupon_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_coupon_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_coupon_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_coupon_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_coupon_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_discount_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_discount_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_discount_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_discount_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_discount_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_discount_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_source_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_source_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_source_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_source_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_source_expiring(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_source_expiring!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_source_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_source_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_subscription_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_subscription_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_subscription_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_subscription_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_subscription_trial_will_end(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_subscription_trial_will_end!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_subscription_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_subscription_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_customer_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_customer_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_file_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_file_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_finalized(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_finalized!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_marked_uncollectible(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_marked_uncollectible!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_paid(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_paid!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_payment_action_required(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_payment_action_required!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_payment_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_payment_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_payment_succeeded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_payment_succeeded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_sent(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_sent!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_upcoming(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_upcoming!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoice_voided(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoice_voided!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoiceitem_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoiceitem_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoiceitem_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoiceitem_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_invoiceitem_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_invoiceitem_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_order_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_order_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_order_payment_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_order_payment_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_order_payment_succeeded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_order_payment_succeeded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_order_return_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_order_return_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_order_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_order_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_amount_capturable_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_amount_capturable_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_canceled(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_canceled!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_payment_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_payment_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_processing(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_processing!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_requires_action(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_requires_action!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_intent_succeeded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_intent_succeeded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_method_attached(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_method_attached!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_method_card_automatically_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_method_card_automatically_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_method_detached(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_method_detached!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payment_method_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payment_method_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payout_canceled(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payout_canceled!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payout_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payout_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payout_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payout_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payout_paid(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payout_paid!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_payout_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_payout_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_ping(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_ping!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_plan_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_plan_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_plan_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_plan_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_plan_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_plan_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_price_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_price_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_price_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_price_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_price_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_price_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_product_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_product_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_product_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_product_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_product_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_product_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_recipient_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_recipient_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_recipient_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_recipient_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_recipient_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_recipient_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_review_closed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_review_closed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_review_opened(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_review_opened!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_setup_intent_canceled(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_setup_intent_canceled!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_setup_intent_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_setup_intent_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_setup_intent_requires_action(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_setup_intent_requires_action!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_setup_intent_setup_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_setup_intent_setup_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_setup_intent_succeeded(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_setup_intent_succeeded!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_sigma_scheduled_query_run_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_sigma_scheduled_query_run_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_sku_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_sku_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_sku_deleted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_sku_deleted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_sku_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_sku_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_source_canceled(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_source_canceled!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_source_chargeable(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_source_chargeable!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_source_failed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_source_failed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_source_transaction_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_source_transaction_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_stripe_event(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_stripe_event!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_aborted(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_aborted!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_canceled(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_canceled!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_completed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_completed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_expiring(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_expiring!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_released(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_released!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_subscription_schedule_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_subscription_schedule_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_tax_rate_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_tax_rate_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_tax_rate_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_tax_rate_updated!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_transfer_created(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_transfer_created!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_transfer_reversed(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_transfer_reversed!(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#28
  def after_transfer_updated(options = T.unsafe(nil), &block); end

  # source://stripe-rails//lib/stripe/callbacks/builder.rb#31
  def after_transfer_updated!(options = T.unsafe(nil), &block); end
end

# source://stripe-rails//lib/stripe/configuration_builder.rb#4
module Stripe::ConfigurationBuilder
  extend ::ActiveSupport::Concern
end

# source://stripe-rails//lib/stripe/configuration_builder.rb#51
class Stripe::ConfigurationBuilder::Configuration
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods

  # @return [Configuration] a new instance of Configuration
  #
  # source://stripe-rails//lib/stripe/configuration_builder.rb#55
  def initialize(id, stripe_class, stripe_configuration_class); end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#951
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#963
  def _validate_callbacks; end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#93
  def compact_create_options; end

  # @return [Boolean]
  #
  # source://stripe-rails//lib/stripe/configuration_builder.rb#101
  def exists?; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#61
  def finalize!; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#70
  def globalize!; end

  # Returns the value of attribute id.
  #
  # source://stripe-rails//lib/stripe/configuration_builder.rb#53
  def id; end

  # source://activemodel/7.1.1/lib/active_model/naming.rb#255
  def model_name(&block); end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#76
  def put!; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#85
  def reset!; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#97
  def to_s; end

  # source://stripe-rails//lib/stripe/configuration_builder.rb#66
  def validate!; end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#955
    def _validate_callbacks; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#959
    def _validate_callbacks=(value); end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://stripe-rails//lib/stripe/coupons.rb#2
module Stripe::Coupons
  include ::Stripe::ConfigurationBuilder

  # source://stripe-rails//lib/stripe/configuration_builder.rb#17
  def coupon(id, &block); end

  class << self
    # source://stripe-rails//lib/stripe/configuration_builder.rb#33
    def [](key); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#37
    def []=(key, value); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#29
    def all; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#9
    def configuration_for(class_id, &block); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#25
    def configurations; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#41
    def put!; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#45
    def reset!; end
  end
end

# source://stripe-rails//lib/stripe/coupons.rb#0
class Stripe::Coupons::Configuration < ::Stripe::ConfigurationBuilder::Configuration
  # source://stripe-rails//lib/stripe/coupons.rb#16
  def initialize(*args); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def amount_off; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def amount_off=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#26
  def create_options; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def currency; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def currency=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def duration; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def duration=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def duration_in_months; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def duration_in_months=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def max_redemptions; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def max_redemptions=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def name; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def name=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def percent_off; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def percent_off=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def redeem_by; end

  # source://stripe-rails//lib/stripe/coupons.rb#6
  def redeem_by=(_arg0); end

  # source://stripe-rails//lib/stripe/coupons.rb#22
  def repeating?; end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end
  end
end

# source://stripe-rails//lib/stripe/engine.rb#4
class Stripe::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # Returns the value of attribute testing.
    #
    # source://stripe-rails//lib/stripe/engine.rb#8
    def testing; end

    # Sets the attribute testing
    #
    # @param value the value to set the attribute testing to.
    #
    # source://stripe-rails//lib/stripe/engine.rb#8
    def testing=(_arg0); end
  end
end

module Stripe::EventDispatch
  def dispatch_stripe_event(request); end
  def retrieve_stripe_event(request); end

  private

  def webhook_event(body, sig_header, endpoint_secrets); end
end

class Stripe::EventsController < ::Stripe::ApplicationController
  include ::Stripe::EventDispatch

  def create; end

  private

  # source://actionview/7.1.1/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://actionpack/7.1.1/lib/action_controller/metal.rb#262
    def middleware_stack; end

    # source://responders/3.1.1/lib/action_controller/respond_with.rb#11
    def mimes_for_respond_to; end
  end
end

# source://stripe-rails//lib/stripe/configuration_builder.rb#109
class Stripe::InvalidConfigurationError < ::StandardError
  # @return [InvalidConfigurationError] a new instance of InvalidConfigurationError
  #
  # source://stripe-rails//lib/stripe/configuration_builder.rb#112
  def initialize(errors); end

  # Returns the value of attribute errors.
  #
  # source://stripe-rails//lib/stripe/configuration_builder.rb#110
  def errors; end
end

module Stripe::JavascriptHelper
  def stripe_elements_tag(submit_path:, css_path: T.unsafe(nil), js_path: T.unsafe(nil)); end
  def stripe_javascript_tag(stripe_js_version = T.unsafe(nil)); end
end

Stripe::JavascriptHelper::DEFAULT_STRIPE_JS_VERSION = T.let(T.unsafe(nil), String)

# source://stripe-rails//lib/stripe/plans.rb#2
module Stripe::Plans
  include ::Stripe::ConfigurationBuilder

  # source://stripe-rails//lib/stripe/configuration_builder.rb#17
  def plan(id, &block); end

  class << self
    # source://stripe-rails//lib/stripe/configuration_builder.rb#33
    def [](key); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#37
    def []=(key, value); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#29
    def all; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#9
    def configuration_for(class_id, &block); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#25
    def configurations; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#41
    def put!; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#45
    def reset!; end
  end
end

# source://stripe-rails//lib/stripe/billing_tier.rb#3
class Stripe::Plans::BillingTier
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods

  # @return [BillingTier] a new instance of BillingTier
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#18
  def initialize(attrs); end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#951
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.1.1/lib/active_support/callbacks.rb#963
  def _validate_callbacks; end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # Returns the value of attribute flat_amount.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def flat_amount; end

  # Sets the attribute flat_amount
  #
  # @param value the value to set the attribute flat_amount to.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def flat_amount=(_arg0); end

  # source://activemodel/7.1.1/lib/active_model/naming.rb#255
  def model_name(&block); end

  # source://stripe-rails//lib/stripe/billing_tier.rb#24
  def to_h; end

  # Returns the value of attribute unit_amount.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def unit_amount; end

  # Sets the attribute unit_amount
  #
  # @param value the value to set the attribute unit_amount to.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def unit_amount=(_arg0); end

  # Returns the value of attribute up_to.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def up_to; end

  # Sets the attribute up_to
  #
  # @param value the value to set the attribute up_to to.
  #
  # source://stripe-rails//lib/stripe/billing_tier.rb#16
  def up_to=(_arg0); end

  # source://activemodel/7.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#955
    def _validate_callbacks; end

    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#959
    def _validate_callbacks=(value); end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://stripe-rails//lib/stripe/plans.rb#0
class Stripe::Plans::Configuration < ::Stripe::ConfigurationBuilder::Configuration
  # source://stripe-rails//lib/stripe/plans.rb#50
  def initialize(*args); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def active; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def active=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def aggregate_usage; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def aggregate_usage=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def amount; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def amount=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def billing_scheme; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def billing_scheme=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def constant_name; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def constant_name=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def currency; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def currency=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def interval; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def interval=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def interval_count; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def interval_count=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def metadata; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def metadata=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def name; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def name=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def nickname; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def nickname=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def product_id; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def product_id=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def statement_descriptor; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def statement_descriptor=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def tiers; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def tiers=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def tiers_mode; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def tiers_mode=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def transform_usage; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def transform_usage=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def trial_period_days; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def trial_period_days=(_arg0); end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def usage_type; end

  # source://stripe-rails//lib/stripe/plans.rb#6
  def usage_type=(_arg0); end

  private

  # source://stripe-rails//lib/stripe/plans.rb#58
  def aggregate_usage_must_be_metered; end

  # source://stripe-rails//lib/stripe/plans.rb#66
  def billing_scheme_must_be_tiered; end

  # source://stripe-rails//lib/stripe/plans.rb#74
  def billing_tiers; end

  # source://stripe-rails//lib/stripe/plans.rb#90
  def create_options; end

  # source://stripe-rails//lib/stripe/plans.rb#123
  def create_options_without_products; end

  # source://stripe-rails//lib/stripe/plans.rb#98
  def default_create_options; end

  # source://stripe-rails//lib/stripe/plans.rb#62
  def name_or_product_id; end

  # source://stripe-rails//lib/stripe/plans.rb#117
  def product_options; end

  # source://stripe-rails//lib/stripe/plans.rb#70
  def tiers_must_be_array; end

  # source://stripe-rails//lib/stripe/plans.rb#83
  def valid_constant_name; end

  # source://stripe-rails//lib/stripe/plans.rb#78
  def validate_tiers; end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end
  end
end

# source://stripe-rails//lib/stripe/plans.rb#82
module Stripe::Plans::ConstTester; end

# source://stripe-rails//lib/stripe/prices.rb#2
module Stripe::Prices
  include ::Stripe::ConfigurationBuilder

  # source://stripe-rails//lib/stripe/configuration_builder.rb#17
  def price(id, &block); end

  class << self
    # source://stripe-rails//lib/stripe/configuration_builder.rb#33
    def [](key); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#37
    def []=(key, value); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#29
    def all; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#9
    def configuration_for(class_id, &block); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#25
    def configurations; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#41
    def put!; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#45
    def reset!; end
  end
end

# source://stripe-rails//lib/stripe/prices.rb#0
class Stripe::Prices::Configuration < ::Stripe::ConfigurationBuilder::Configuration
  # source://stripe-rails//lib/stripe/prices.rb#57
  def initialize(*args); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def active; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def active=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def billing_scheme; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def billing_scheme=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def constant_name; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def constant_name=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def currency; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def currency=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#82
  def exists?; end

  # source://stripe-rails//lib/stripe/prices.rb#7
  def lookup_key; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def metadata; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def metadata=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def name; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def name=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def nickname; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def nickname=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def object; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def object=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def product_id; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def product_id=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#67
  def put!; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def recurring; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def recurring=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#102
  def recurring_aggregate_usage; end

  # source://stripe-rails//lib/stripe/prices.rb#98
  def recurring_interval; end

  # source://stripe-rails//lib/stripe/prices.rb#110
  def recurring_interval_count; end

  # source://stripe-rails//lib/stripe/prices.rb#106
  def recurring_usage_type; end

  # source://stripe-rails//lib/stripe/prices.rb#77
  def reset!; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def statement_descriptor; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def statement_descriptor=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#94
  def stripe_id; end

  # source://stripe-rails//lib/stripe/prices.rb#88
  def stripe_object; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tax_behavior; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tax_behavior=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tiers; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tiers=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tiers_mode; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def tiers_mode=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def transform_quantity; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def transform_quantity=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def type; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def type=(_arg0); end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def unit_amount; end

  # source://stripe-rails//lib/stripe/prices.rb#8
  def unit_amount=(_arg0); end

  private

  # source://stripe-rails//lib/stripe/prices.rb#132
  def billing_scheme_must_be_tiered; end

  # source://stripe-rails//lib/stripe/prices.rb#140
  def billing_tiers; end

  # source://stripe-rails//lib/stripe/prices.rb#164
  def create_options; end

  # source://stripe-rails//lib/stripe/prices.rb#128
  def name_or_product_id; end

  # source://stripe-rails//lib/stripe/prices.rb#181
  def product_options; end

  # source://stripe-rails//lib/stripe/prices.rb#115
  def recurring_aggregate_usage_must_be_metered; end

  # source://stripe-rails//lib/stripe/prices.rb#119
  def recurring_interval_count_maximum; end

  # source://stripe-rails//lib/stripe/prices.rb#156
  def reset_options; end

  # source://stripe-rails//lib/stripe/prices.rb#136
  def tiers_must_be_array; end

  # source://stripe-rails//lib/stripe/prices.rb#149
  def valid_constant_name; end

  # source://stripe-rails//lib/stripe/prices.rb#144
  def validate_tiers; end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end
  end
end

# source://stripe-rails//lib/stripe/prices.rb#148
module Stripe::Prices::ConstTester; end

# source://stripe-rails//lib/stripe/prices.rb#4
Stripe::Prices::VALID_TIME_UNITS = T.let(T.unsafe(nil), Array)

# source://stripe-rails//lib/stripe/products.rb#2
module Stripe::Products
  include ::Stripe::ConfigurationBuilder

  # source://stripe-rails//lib/stripe/configuration_builder.rb#17
  def product(id, &block); end

  class << self
    # source://stripe-rails//lib/stripe/configuration_builder.rb#33
    def [](key); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#37
    def []=(key, value); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#29
    def all; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#9
    def configuration_for(class_id, &block); end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#25
    def configurations; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#41
    def put!; end

    # source://stripe-rails//lib/stripe/configuration_builder.rb#45
    def reset!; end
  end
end

# source://stripe-rails//lib/stripe/products.rb#0
class Stripe::Products::Configuration < ::Stripe::ConfigurationBuilder::Configuration
  # source://stripe-rails//lib/stripe/products.rb#6
  def active; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def active=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def attributes; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def attributes=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def caption; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def caption=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def description; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def description=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def metadata; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def metadata=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def name; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def name=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def shippable; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def shippable=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def statement_descriptor; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def statement_descriptor=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def type; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def type=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def unit_label; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def unit_label=(_arg0); end

  # source://stripe-rails//lib/stripe/products.rb#6
  def url; end

  # source://stripe-rails//lib/stripe/products.rb#6
  def url=(_arg0); end

  private

  # source://stripe-rails//lib/stripe/products.rb#36
  def create_options; end

  # source://stripe-rails//lib/stripe/products.rb#28
  def good?; end

  # source://stripe-rails//lib/stripe/products.rb#32
  def service?; end

  class << self
    # source://activesupport/7.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activemodel/7.1.1/lib/active_model/validations.rb#71
    def _validators; end
  end
end

# source://stripe-rails//lib/stripe/rails/version.rb#2
module Stripe::Rails; end

# source://stripe-rails//lib/stripe/rails/version.rb#3
Stripe::Rails::VERSION = T.let(T.unsafe(nil), String)
