# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `uniform_notifier` gem.
# Please instead update this file by running `bin/tapioca gem uniform_notifier`.

# source://uniform_notifier//lib/uniform_notifier/base.rb#3
class UniformNotifier
  class << self
    # source://uniform_notifier//lib/uniform_notifier.rb#61
    def active_notifiers; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def airbrake; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def airbrake=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def alert; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def alert=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def appsignal; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def appsignal=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def bugsnag; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def bugsnag=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def console; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def console=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def customized_logger; end

    # source://uniform_notifier//lib/uniform_notifier.rb#71
    def customized_logger=(logdev); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def honeybadger; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def honeybadger=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def rails_logger; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def rails_logger=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def raise; end

    # source://uniform_notifier//lib/uniform_notifier.rb#81
    def raise=(exception_class); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def rollbar; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def rollbar=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def sentry; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def sentry=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def slack; end

    # source://uniform_notifier//lib/uniform_notifier.rb#76
    def slack=(slack); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def terminal_notifier; end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def terminal_notifier=(_arg0); end

    # source://uniform_notifier//lib/uniform_notifier.rb#59
    def xmpp; end

    # source://uniform_notifier//lib/uniform_notifier.rb#66
    def xmpp=(xmpp); end
  end
end

# source://uniform_notifier//lib/uniform_notifier.rb#21
UniformNotifier::AVAILABLE_NOTIFIERS = T.let(T.unsafe(nil), Array)

# source://uniform_notifier//lib/uniform_notifier/airbrake.rb#4
class UniformNotifier::AirbrakeNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/airbrake.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/airbrake.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/appsignal.rb#4
class UniformNotifier::AppsignalNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/appsignal.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/appsignal.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/base.rb#4
class UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/base.rb#6
    def active?; end

    # source://uniform_notifier//lib/uniform_notifier/base.rb#10
    def inline_notify(data); end

    # source://uniform_notifier//lib/uniform_notifier/base.rb#19
    def out_of_channel_notify(data); end

    protected

    # source://uniform_notifier//lib/uniform_notifier/base.rb#30
    def _inline_notify(data); end

    # source://uniform_notifier//lib/uniform_notifier/base.rb#32
    def _out_of_channel_notify(data); end

    # source://uniform_notifier//lib/uniform_notifier/base.rb#34
    def wrap_js_association(code, attributes = T.unsafe(nil)); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/bugsnag.rb#4
class UniformNotifier::BugsnagNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/bugsnag.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/bugsnag.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/customized_logger.rb#4
class UniformNotifier::CustomizedLogger < ::UniformNotifier::Base
  class << self
    # source://uniform_notifier//lib/uniform_notifier/customized_logger.rb#12
    def _out_of_channel_notify(data); end

    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/customized_logger.rb#8
    def active?; end

    # source://uniform_notifier//lib/uniform_notifier/customized_logger.rb#17
    def setup(logdev); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/errors.rb#4
class UniformNotifier::Exception < ::RuntimeError; end

# source://uniform_notifier//lib/uniform_notifier/honeybadger.rb#4
class UniformNotifier::HoneybadgerNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/honeybadger.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/honeybadger.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/javascript_alert.rb#4
class UniformNotifier::JavascriptAlert < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/javascript_alert.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/javascript_alert.rb#12
    def _inline_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/javascript_console.rb#4
class UniformNotifier::JavascriptConsole < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/javascript_console.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/javascript_console.rb#12
    def _inline_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier.rb#38
UniformNotifier::NOTIFIERS = T.let(T.unsafe(nil), Array)

# source://uniform_notifier//lib/uniform_notifier.rb#55
class UniformNotifier::NotificationError < ::StandardError; end

# source://uniform_notifier//lib/uniform_notifier/rails_logger.rb#4
class UniformNotifier::RailsLogger < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/rails_logger.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/rails_logger.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/raise.rb#4
class UniformNotifier::Raise < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/raise.rb#6
    def active?; end

    # source://uniform_notifier//lib/uniform_notifier/raise.rb#10
    def setup_connection(exception_class); end

    protected

    # @raise [@exception_class]
    #
    # source://uniform_notifier//lib/uniform_notifier/raise.rb#16
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/rollbar.rb#4
class UniformNotifier::RollbarNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/rollbar.rb#8
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/rollbar.rb#14
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/rollbar.rb#5
UniformNotifier::RollbarNotifier::DEFAULT_LEVEL = T.let(T.unsafe(nil), String)

# source://uniform_notifier//lib/uniform_notifier/sentry.rb#4
class UniformNotifier::SentryNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/sentry.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/sentry.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/slack.rb#4
class UniformNotifier::Slack < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/slack.rb#10
    def active?; end

    # source://uniform_notifier//lib/uniform_notifier/slack.rb#14
    def setup_connection(config = T.unsafe(nil)); end

    protected

    # source://uniform_notifier//lib/uniform_notifier/slack.rb#26
    def _out_of_channel_notify(data); end

    private

    # @raise [NotificationError]
    #
    # source://uniform_notifier//lib/uniform_notifier/slack.rb#33
    def fail_connection(message); end

    # source://uniform_notifier//lib/uniform_notifier/slack.rb#38
    def notify(message); end

    # source://uniform_notifier//lib/uniform_notifier/slack.rb#42
    def parse_config(config); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/slack.rb#5
UniformNotifier::Slack::POSSIBLE_OPTIONS = T.let(T.unsafe(nil), Array)

# source://uniform_notifier//lib/uniform_notifier/terminal_notifier.rb#4
class UniformNotifier::TerminalNotifier < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/terminal_notifier.rb#6
    def active?; end

    protected

    # source://uniform_notifier//lib/uniform_notifier/terminal_notifier.rb#12
    def _out_of_channel_notify(data); end
  end
end

# source://uniform_notifier//lib/uniform_notifier/xmpp.rb#4
class UniformNotifier::Xmpp < ::UniformNotifier::Base
  class << self
    # @return [Boolean]
    #
    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#10
    def active?; end

    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#14
    def setup_connection(xmpp_information); end

    protected

    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#34
    def _out_of_channel_notify(data); end

    private

    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#42
    def connect; end

    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#50
    def notify(message); end

    # source://uniform_notifier//lib/uniform_notifier/xmpp.rb#56
    def presence_status; end
  end
end
