<TuistWeb.Marketing.Layouts.marketing_next {assigns} :if={@next?}>
  <main id="marketing-changelog">
    <TuistWeb.Marketing.MarketingComponents.navbar {assigns} />
    <header data-part="header">

    </header>
    <div data-part="timeline" id="changelog-timeline">
      <div data-part="scroll-indicator"></div>
      <%= for entry <- @entries do %>
        <time data-part="date">
          {Timex.format!(entry.date, "{Mfull} {D}, {YYYY}")}
        </time>
        <div data-part="line"></div>
        <article data-part="entry">
          <div data-part="category">{entry.category}</div>
          <h2 data-part="title">{entry.title}</h2>
          <div data-part="body" data-content>
            {raw(entry.body)}
          </div>
        </article>
      <% end %>
    </div>
    <script nonce={get_csp_nonce()}>
      (function() {
        const timeline = document.getElementById('changelog-timeline');
        const indicator = timeline.querySelector('[data-part="scroll-indicator"]');
        const lines = timeline.querySelectorAll('[data-part="line"]');

        if (!lines.length) return;

        const firstLine = lines[0];
        const lastLine = lines[lines.length - 1];

        function updateIndicator() {
          // Calculate horizontal position
          const timelineRect = timeline.getBoundingClientRect();
          const firstLineRect = firstLine.getBoundingClientRect();
          const lineLeft = firstLineRect.left - timelineRect.left;
          timeline.style.setProperty('--indicator-left', `${lineLeft}px`);

          const scrollTop = window.scrollY || window.pageYOffset;
          const viewportCenter = scrollTop + (window.innerHeight * 0.2); // 20% from top

          // Get current positions
          const timelineTop = timeline.offsetTop;
          const firstLineTop = firstLine.offsetTop + timelineTop;
          const lastLineBottom = lastLine.offsetTop + lastLine.offsetHeight + timelineTop;
          const totalLineHeight = lastLineBottom - firstLineTop;

          // Calculate progress based on viewport center
          let progress = Math.max(0, Math.min(1, (viewportCenter - firstLineTop) / totalLineHeight));

          // Position relative to timeline container
          const lineStartInContainer = firstLine.offsetTop;
          const lineEndInContainer = lastLine.offsetTop + lastLine.offsetHeight;
          const lineHeightInContainer = lineEndInContainer - lineStartInContainer;

          const indicatorPosition = lineStartInContainer + (progress * lineHeightInContainer);

          timeline.style.setProperty('--indicator-top', `${indicatorPosition}px`);

          // Show indicator after first calculation
          if (!indicator.hasAttribute('data-ready')) {
            indicator.setAttribute('data-ready', 'true');
          }
        }

        let ticking = false;
        window.addEventListener('scroll', function() {
          if (!ticking) {
            window.requestAnimationFrame(function() {
              updateIndicator();
              ticking = false;
            });
            ticking = true;
          }
        });
        window.addEventListener('resize', updateIndicator);
        updateIndicator();
      })();
    </script>
  </main>
</TuistWeb.Marketing.Layouts.marketing_next>
<TuistWeb.Marketing.Layouts.marketing {assigns} :if={not @next?}>
  <main class="marketing__changelog" aria-label={dgettext("marketing", "Changelog")} role="main">
    <div class="marketing__changelog__header" role="banner">
      <h1 class="marketing__changelog__header__title">{dgettext("marketing", "Changelog")}</h1>
      <nav
        class="marketing__changelog__header__categories"
        aria-label={dgettext("marketing", "Categories")}
      >
        <.link
          patch={~p"/changelog"}
          data-selected={if(@current_path == ~p"/changelog", do: "true", else: "false")}
          class="marketing__changelog__header__categories__category"
          aria-current={if(@current_path == ~p"/changelog", do: "page", else: "false")}
        >
          {dgettext("marketing", "All")}
        </.link>
        <%= for category <- @categories do %>
          <% params = %{category: category} %>
          <.link
            patch={~p"/changelog?#{params}"}
            data-selected={
              if(@current_path == ~p"/changelog?#{params}", do: "true", else: "false")
            }
            class="marketing__changelog__header__categories__category"
            aria-current={
              if(@current_path == ~p"/changelog?#{params}", do: "page", else: "false")
            }
          >
            <span>{category}</span>
          </.link>
        <% end %>
      </nav>
    </div>
    <div class="marketing__changelog__body">
      <%= for entry <- @entries do %>
        <div class="marketing__changelog__body__entry__timeline" role="presentation">
          <TuistWeb.Marketing.MarketingIcons.shell_icon
            class="marketing__changelog__body__entry__timeline__icon"
            aria-hidden="true"
          />
          <div class="marketing__changelog__body__entry__timeline__line" aria-hidden="true"></div>
        </div>
        <article class="marketing__changelog__body__entry__metadata">
          <h3 class="marketing__changelog__body__entry__metadata__title" id={entry.id}>
            <a href={"\##{entry.id}"}>{entry.title}</a>
          </h3>
          <p class="marketing__changelog__body__entry__metadata__date">
            {Timex.format!(entry.date, "{Mfull} {D}, {YYYY}")}
          </p>
          <div class="marketing__changelog__body__entry__metadata__category">
            {entry.category}
          </div>
        </article>
        <div class="marketing__changelog__body__entry__body marketing_content">
          {raw(entry.body)}
        </div>
      <% end %>
    </div>
    <TuistWeb.Marketing.MarketingComponents.cta />
  </main>
</TuistWeb.Marketing.Layouts.marketing>
