<div id="qa">
  <.card title={gettext("Analytics")} icon="chart_arcs" data-part="analytics">
    <:actions>
      <.dropdown
        id="qa-analytics-app-dropdown"
        label={@analytics_app_label}
        secondary_text={gettext("App:")}
      >
        <.dropdown_item
          value="any"
          label="Any"
          patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_app", "any")}"}
          data-selected={@analytics_app == "any"}
        >
          <:right_icon><.check /></:right_icon>
        </.dropdown_item>
        <.dropdown_item
          :for={{app_name, app_label} <- @available_apps}
          value={app_name}
          label={app_label}
          patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_app", app_name)}"}
          data-selected={@analytics_app == app_name}
        >
          <:right_icon><.check /></:right_icon>
        </.dropdown_item>
      </.dropdown>
      <.button_group size="large">
        <.button_group_item
          patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_date_range", "last_7_days")}"}
          label={gettext("7 days")}
          data-selected={@analytics_date_range == "last_7_days"}
        />
        <.button_group_item
          patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_date_range", "last_30_days")}"}
          label={gettext("30 days")}
          data-selected={@analytics_date_range == "last_30_days"}
        />
        <.button_group_item
          patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_date_range", "last_12_months")}"}
          label={gettext("12 months")}
          data-selected={@analytics_date_range == "last_12_months"}
        />
      </.button_group>
    </:actions>
    <div data-part="widgets">
      <.widget
        title={gettext("QA runs")}
        description={
          gettext(
            "QA runs represent the number of QA test sessions executed during a given period."
          )
        }
        value={@qa_runs_analytics.count}
        id="widget-qa-run-count"
        trend_value={@qa_runs_analytics.trend}
        trend_label={@analytics_trend_label}
        patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_selected_widget", "qa_run_count")}"}
        replace={true}
        selected={@analytics_selected_widget == "qa_run_count"}
        empty={@qa_runs_analytics.count == 0}
      />
      <.widget
        title={gettext("App issues found")}
        description={
          gettext(
            "App issues found represents the total number of issues discovered during QA testing in a given period."
          )
        }
        value={@qa_issues_analytics.count}
        id="widget-qa-issues-count"
        trend_value={@qa_issues_analytics.trend}
        trend_label={@analytics_trend_label}
        trend_inverse
        patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_selected_widget", "qa_issues_count")}"}
        replace={true}
        selected={@analytics_selected_widget == "qa_issues_count"}
        empty={@qa_runs_analytics.count == 0}
      />
      <.widget
        title={gettext("Avg. QA duration")}
        description={
          gettext(
            "Average QA duration represents the average time it took to complete a QA session during a given period."
          )
        }
        value={
          gettext("%{qa_average_duration}s",
            qa_average_duration:
              (@qa_duration_analytics.total_average_duration / 1000)
              |> Decimal.from_float()
              |> Decimal.round(1)
          )
        }
        id="widget-qa-duration"
        trend_value={@qa_duration_analytics.trend}
        trend_label={@analytics_trend_label}
        trend_inverse
        patch={"?#{TuistWeb.Utilities.Query.put(@uri.query, "analytics_selected_widget", "qa_duration")}"}
        replace={true}
        selected={@analytics_selected_widget == "qa_duration"}
        empty={@qa_runs_analytics.count == 0}
      />
    </div>
    <.card_section :if={@qa_runs_analytics.count != 0}>
      <div data-part="analytics-chart">
        <.chart
          id="qa-analytics-chart"
          type="line"
          extra_options={
            %{
              grid: %{
                width: "93%",
                left: "0.4%",
                right: "7%",
                height: "88%",
                top: "5%"
              },
              xAxis: %{
                boundaryGap: false,
                type: "category",
                axisLabel: %{
                  color: "var:noora-surface-label-secondary",
                  formatter: "fn:toLocaleDate",
                  customValues: [
                    @analytics_chart_data.dates |> List.first(),
                    @analytics_chart_data.dates |> List.last()
                  ],
                  padding: [10, 0, 0, 0]
                }
              },
              yAxis: %{
                splitLine: %{
                  lineStyle: %{
                    color: "var:noora-chart-lines"
                  }
                },
                axisLabel: %{
                  color: "var:noora-surface-label-secondary",
                  formatter: @analytics_chart_data.value_formatter
                }
              },
              tooltip: %{
                valueFormat: @analytics_chart_data.value_formatter
              },
              legend: %{
                show: false
              }
            }
          }
          series={[
            %{
              data:
                Enum.zip(
                  @analytics_chart_data.dates,
                  @analytics_chart_data.values
                )
                |> Enum.map(&Tuple.to_list/1),
              name: @analytics_chart_data.name,
              type: "line",
              smooth: 0.1,
              symbol: "none"
            }
          ]}
          y_axis_min={0}
        />
      </div>
    </.card_section>
    <.empty_card_section :if={@qa_runs_analytics.count == 0} title={gettext("No data yet")}>
      <:image>
        <img src="/images/empty_line_chart_light.png" data-theme="light" />
        <img src="/images/empty_line_chart_dark.png" data-theme="dark" />
      </:image>
    </.empty_card_section>
  </.card>

  <.card title={gettext("Launch Arguments")} icon="smart_home" data-part="launch-arguments">
    <:actions>
      <.button
      label="Add"
        variant="primary"
        size="small"
        phx-click="show_launch_args_modal"
      >
        <:icon_left><.icon name="smart_home" /></:icon_left>
        {gettext("Add Group")}
      </.button>
    </:actions>
    <.card_section data-part="launch-arguments-section">
      <div :if={not Enum.empty?(@launch_argument_groups)} data-part="launch-arguments-table">
        <.table id="launch-arguments-table" rows={@launch_argument_groups}>
          <:col :let={group} label={gettext("Name")}>
            <.text_cell label={group.name} />
          </:col>
          <:col :let={group} label={gettext("Description")}>
            <.text_cell label={group.description || gettext("No description")} />
          </:col>
          <:col :let={group} label={gettext("Arguments")}>
            <.text_cell label={group.value} />
          </:col>
          <:col :let={group} label={gettext("Actions")}>
            <div class="launch-args-actions">
              <.button
              label="Edit"
                variant="secondary"
                size="small"
                phx-click="edit_launch_args_group"
                phx-value-id={group.id}
              >
                <:icon_left><.icon name="pencil" /></:icon_left>
                {gettext("Edit")}
              </.button>
              <.button
                variant="destructive"
                size="small"
                label="Delete"
                phx-click="delete_launch_args_group"
                phx-value-id={group.id}
                data-confirm={gettext("Are you sure you want to delete this launch argument group?")}
              >
                <:icon_left><.icon name="trash" /></:icon_left>
                {gettext("Delete")}
              </.button>
            </div>
          </:col>
        </.table>
      </div>

      <div :if={Enum.empty?(@launch_argument_groups)} data-part="empty-launch-arguments">
        <.empty_card_section
          title={gettext("No launch argument groups yet")}
          data-part="empty-launch-arguments-table-card-section"
        >
          <:image>
            <img src="/images/empty_table_light.png" data-theme="light" />
            <img src="/images/empty_table_dark.png" data-theme="dark" />
          </:image>
          {gettext("Create launch argument groups to automatically configure app startup parameters for your QA tests.")}
        </.empty_card_section>
      </div>
    </.card_section>
  </.card>

  <.card title={gettext("QA Runs")} icon="devices_code" data-part="qa-runs">
    <.card_section data-part="qa-runs-section">
      <div :if={not Enum.empty?(@qa_runs)} data-part="qa-runs-table">
        <.table id="qa-runs-table" rows={@qa_runs}>
          <:col :let={run} label={gettext("Name")}>
            <.text_cell label={run.app_build.preview.display_name} />
          </:col>
          <:col :let={run} label={gettext("Platform")}>
            <.platform_cell platform={
              run.app_build.preview.supported_platforms
              |> Preview.map_simulators_to_devices()
              |> List.first()
            } />
          </:col>
          <:col :let={run} label={gettext("Issues")}>
            <% issue_count = length(run.run_steps) %>
            <.badge_cell
              label={"#{issue_count} #{ngettext("issue", "issues", issue_count)}"}
              color={if issue_count > 0, do: "warning", else: "success"}
              style="light-fill"
              icon={if issue_count > 0, do: "alert_hexagon", else: "check"}
            />
          </:col>
          <:col :let={run} label={gettext("Branch")}>
            <.text_cell label={run.git_ref || gettext("None")} />
          </:col>
          <:col :let={run} label={gettext("SHA")}>
            <.text_cell label={
              (run.app_build.preview.git_commit_sha || "None")
              |> String.slice(0, 7)
            } />
          </:col>
          <:col :let={run} label={gettext("Tested")}>
            <.text_cell label={format_datetime(run.inserted_at)} />
          </:col>
        </.table>
      </div>

      <div :if={Enum.empty?(@qa_runs)} data-part="empty-qa-runs">
        <.empty_card_section
          title={gettext("No QA runs yet")}
          data-part="empty-qa-runs-table-card-section"
        >
          <:image>
            <img src="/images/empty_table_light.png" data-theme="light" />
            <img src="/images/empty_table_dark.png" data-theme="dark" />
          </:image>
        </.empty_card_section>
      </div>
    </.card_section>
  </.card>

  <.modal
    :if={@show_launch_args_modal}
    id="launch-args-modal"
    title={if @editing_launch_args_group_id, do: gettext("Edit Launch Arguments Group"), else: gettext("Add Launch Arguments Group")}
    description={gettext("Configure launch arguments that can be automatically selected for QA tests based on the test prompt.")}
    on_dismiss="hide_launch_args_modal"
  >
    <:trigger></:trigger>
    <form id="launch-args-form" phx-submit="save_launch_args_group" phx-change="form_change" data-part="launch-args-form">
      <div class="launch-args-form-fields">
        <.text_input
          name="launch_args_form[name]"
          label={gettext("Name")}
          placeholder="e.g., login-credentials"
          value={@launch_args_form_data["name"]}
          required
          hint={gettext("A unique name for this group (alphanumeric, hyphens, underscores only)")}
        />

        <.text_input
          name="launch_args_form[description]"
          label={gettext("Description")}
          placeholder="e.g., Skip login with prefilled credentials"
          value={@launch_args_form_data["description"]}
          hint={gettext("Describe when this group should be used (optional)")}
        />

        <.text_input
          name="launch_args_form[value]"
          label={gettext("Launch Arguments")}
          placeholder="e.g., --email hello@tuist.dev --password 123456"
          value={@launch_args_form_data["value"]}
          required
          hint={gettext("The actual command-line arguments to pass to your app")}
        />
      </div>
    </form>

    <:footer>
      <.modal_footer>
        <:action>
          <.button variant="secondary" phx-click="hide_launch_args_modal">
            {gettext("Cancel")}
          </.button>
          <.button
            variant="primary"
            phx-click="save_launch_args_group"
            phx-value-name={@launch_args_form_data["name"]}
            phx-value-description={@launch_args_form_data["description"]}
            phx-value-value={@launch_args_form_data["value"]}
          >
            {if @editing_launch_args_group_id, do: gettext("Update Group"), else: gettext("Create Group")}
          </.button>
        </:action>
      </.modal_footer>
    </:footer>
  </.modal>
</div>
