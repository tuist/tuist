import Config

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Disable caching of OpenAPI Spex as suggested in the docs
config :open_api_spex, :cache_adapter, OpenApiSpex.Plug.NoneCache

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Include HEEx debug annotations as HTML comments in rendered markup
config :phoenix_live_view, :debug_heex_annotations, true

config :tuist, Tuist.ClickHouseRepo,
  hostname: "localhost",
  port: 8123,
  database: "tuist_development"

config :tuist, Tuist.IngestRepo,
  hostname: "localhost",
  port: 8123,
  database: "tuist_development",
  flush_interval_ms: 5000,
  # Bytes
  max_buffer_size: 100_000,
  pool_size: 5

config :tuist, Tuist.Mailer, adapter: Bamboo.LocalAdapter

# Configure your database
config :tuist, Tuist.Repo,
  hostname: "localhost",
  database: "tuist_development",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :tuist, TuistWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 8080],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  watchers: [
    esbuild_app: {Esbuild, :install_and_run, [:app, ~w(--sourcemap=inline --watch)]},
    esbuild_marketing: {Esbuild, :install_and_run, [:marketing, ~w(--sourcemap=inline --watch)]},
    esbuild_apidocs: {Esbuild, :install_and_run, [:apidocs, ~w(--sourcemap=inline --watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :tuist, TuistWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/tuist_web/(controllers|live|components)/.*(ex|heex)$",
      ~r"lib/tuist_web/marketing/(controllers|live|components)/.*(ex|heex)$",
      ~r"priv/marketing/blog/*/.*(md)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :tuist, dev_routes: true

config :tuist,
  ecto_repos: [Tuist.Repo, Tuist.IngestRepo],
  generators: [timestamp_type: :utc_datetime],
  api_pipeline_producer_module: OffBroadwayMemory.Producer,
  api_pipeline_producer_options: [buffer: :api_data_pipeline_in_memory_buffer]
