---
components:
  responses: {}
  schemas:
    CacheActionItem:
      description: Represents an action item stored in the cache.
      properties:
        hash:
          description: The hash that uniquely identifies the artifact in the cache.
          type: string
      required:
        - hash
      title: CacheActionItem
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.CacheActionItem
    OrganizationList:
      description: The list of organizations the authenticated subject is part of.
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      required:
        - organizations
      title: OrganizationList
      type: object
    AccountFullToken:
      description: A new account token.
      properties:
        token:
          description: The generated account token.
          type: string
      required:
        - token
      title: AccountFullToken
      type: object
    ArtifactUploadID:
      description: The upload has been initiated and a ID is returned to upload the various parts using multi-part uploads
      properties:
        data:
          description: Data that contains ID that's associated with the multipart upload to use when uploading parts
          properties:
            upload_id:
              description: The upload ID
              type: string
          required:
            - upload_id
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      required:
        - status
        - data
      title: ArtifactUploadID
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.ArtifactUploadId
    CacheCategory:
      default: builds
      description: The category of the cache.
      enum:
        - tests
        - builds
      title: CacheCategory
      type: string
      x-struct: Elixir.TuistWeb.API.Schemas.CacheCategory
    CacheArtifactDownloadURL:
      description: The URL to download the artifact from the cache.
      properties:
        data:
          properties:
            expires_at:
              description: The UNIX timestamp when the URL expires.
              type: integer
            url:
              description: The URL to download the artifact from the cache.
              type: string
          required:
            - url
            - expires_at
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      required:
        - status
        - data
      title: CacheArtifactDownloadURL
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.CacheArtifactDownloadURL
    Tokens:
      description: A list of project tokens.
      properties:
        tokens:
          items:
            $ref: '#/components/schemas/ProjectToken'
          type: array
      required:
        - tokens
      title: Tokens
      type: object
    ArtifactMultipartUploadParts:
      description: It represents a part that has been uploaded using multipart uploads. The part is identified by its number and the etag
      properties:
        parts:
          items:
            properties:
              etag:
                description: The ETag of the part
                type: string
              part_number:
                description: The part number
                type: integer
            required:
              - part_number
              - etag
            type: object
          type: array
        upload_id:
          description: The upload ID
          type: string
      required:
        - upload_id
        - parts
      title: ArtifactMultipartUploadParts
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.ArtifactMultipartUploadParts
    CommandEvent:
      description: The schema for the command analytics event.
      properties:
        id:
          description: ID of the command event
          type: number
        name:
          description: Name of the command
          type: string
        url:
          description: URL to the command event
          type: string
      required:
        - id
        - name
        - url
      title: CommandEvent
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.CommandEvent
    CacheActionItemUploadParams:
      properties:
        hash:
          description: The hash of the cache action item.
          type: string
      title: CacheActionItemUploadParams
      type: object
    ArtifactMultipartUploadPart:
      description: Represents an multipart upload's part identified by the upload id and the part number
      properties:
        content_length:
          description: The content length of the part.
          type: integer
        part_number:
          description: The part number of the multipart upload.
          type: integer
        upload_id:
          description: The upload ID.
          type: string
      required:
        - part_number
        - upload_id
      title: ArtifactMultipartUploadPart
      x-struct: Elixir.TuistWeb.API.Schemas.ArtifactMultipartUploadPart
    ProjectFullToken:
      description: A new project token.
      properties:
        token:
          description: The generated project token.
          type: string
      required:
        - token
      title: ProjectFullToken
      type: object
    PreviewArtifactUpload:
      description: The upload has been initiated and preview and upload unique identifier are returned to upload the various parts using multi-part uploads
      properties:
        data:
          description: Data that contains preview and upload unique identifier associated with the multipart upload to use when uploading parts
          properties:
            preview_id:
              description: The id of the preview.
              type: string
            upload_id:
              description: The upload ID
              type: string
          required:
            - upload_id
            - preview_id
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      required:
        - status
        - data
      title: PreviewArtifactUpload
      type: object
    Project:
      properties:
        default_branch:
          description: The default branch of the project.
          example: main
          type: string
        full_name:
          description: The full name of the project (e.g. tuist/tuist)
          type: string
        id:
          description: ID of the project
          type: number
        repository_url:
          description: The URL of the connected git repository, such as https://github.com/tuist/tuist or https://github.com/tuist/tuist.git
          type: string
        token:
          deprecated: true
          description: The token that should be used to authenticate the project. For CI only.
          type: string
        visibility:
          description: The visibility of the project
          enum:
            - private
            - public
          type: string
      required:
        - id
        - full_name
        - token
        - default_branch
        - visibility
      title: Project
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Project
    Invitation:
      properties:
        id:
          description: The invitation's unique identifier
          type: number
        invitee_email:
          description: The email of the invitee
          type: string
        inviter:
          $ref: '#/components/schemas/User'
        organization_id:
          description: The id of the organization the invitee is invited to
          type: number
        token:
          description: The token to accept the invitation
          type: string
      required:
        - id
        - invitee_email
        - organization_id
        - inviter
        - token
      title: Invitation
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Invitation
    PreviewIndexPage:
      default: 1
      description: The page number to return.
      minimum: 1
      title: PreviewIndexPage
      type: integer
    OrganizationMember:
      description: An organization member
      properties:
        email:
          description: The organization member's email
          type: string
        id:
          description: The organization member's unique identifier
          type: number
        name:
          description: The organization member's name
          type: string
        role:
          description: The organization member's role
          enum:
            - admin
            - user
          type: string
      required:
        - id
        - email
        - name
        - role
      title: OrganizationMember
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.OrganizationMember
    Organization:
      description: An organization
      properties:
        id:
          description: The organization's unique identifier
          type: number
        invitations:
          description: A list of organization invitations
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
        members:
          description: A list of organization members
          items:
            $ref: '#/components/schemas/OrganizationMember'
          type: array
        name:
          description: The organization's name
          type: string
        plan:
          description: The plan associated with the organization
          enum:
            - air
            - pro
            - enterprise
            - none
          type: string
        sso_organization_id:
          description: The organization ID associated with the SSO provider
          type: string
        sso_provider:
          description: The SSO provider set up for the organization
          enum:
            - google
            - okta
          type: string
      required:
        - id
        - name
        - plan
        - members
        - invitations
      title: Organization
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Organization
    PreviewSupportedPlatform:
      enum:
        - ios
        - ios_simulator
        - tvos
        - tvos_simulator
        - watchos
        - watchos_simulator
        - visionos
        - visionos_simulator
        - macos
      title: PreviewSupportedPlatform
      type: string
      x-struct: Elixir.TuistWeb.API.Schemas.PreviewSupportedPlatform
    CommandEventArtifact:
      description: It represents an artifact that's associated with a command event (e.g. result bundles)
      properties:
        name:
          description: The name of the file. It's used only for certain types such as result_bundle_object
          type: string
        type:
          description: |
            The command event artifact type. It can be:
            - result_bundle: A result bundle artifact that represents the whole `.xcresult` bundle
            - invocation_record: An invocation record artifact. This is a root bundle object of the result bundle
            - result_bundle_object: A result bundle object. There are many different bundle objects per result bundle.
          enum:
            - result_bundle
            - invocation_record
            - result_bundle_object
          type: string
      required:
        - type
      title: CommandEventArtifact
      x-struct: Elixir.TuistWeb.API.Schemas.CommandEventArtifact
    Module:
      properties:
        hash:
          description: A hash that represents the module.
          type: string
        name:
          description: A name of the module
          type: string
        project_identifier:
          description: Project's relative path from the root of the repository
          type: string
      required:
        - name
        - project_identifier
        - hash
      title: Module
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Module
    Preview:
      properties:
        bundle_identifier:
          description: The bundle identifier of the preview
          type: string
        display_name:
          description: The display name of the preview
          type: string
        git_branch:
          description: The git branch associated with the preview
          type: string
        git_commit_sha:
          description: The git commit SHA associated with the preview
          type: string
        icon_url:
          description: The URL for the icon image of the preview
          type: string
        id:
          description: Unique identifier of the preview.
          type: string
        qr_code_url:
          description: The URL for the QR code image to dowload the preview
          type: string
        url:
          description: The URL to download the preview
          type: string
      required:
        - id
        - url
        - qr_code_url
        - icon_url
      title: Preview
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Preview
    ProjectToken:
      description: A token to authenticate API requests as a project.
      properties:
        id:
          description: The token unique identifier.
          type: string
        inserted_at:
          description: The timestamp of when the token was created.
          format: date-time
          type: string
      required:
        - id
        - inserted_at
      title: ProjectToken
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.ProjectToken
    AccountTokenRequest:
      description: The request to create a new account token.
      properties:
        scopes:
          description: The scopes for the new account token.
          items:
            description: The scope of the token.
            enum:
              - account_registry_read
            title: AccountTokenScope
            type: string
          type: array
      required:
        - scopes
      title: AccountTokenRequest
      type: object
    AccountTokenScope:
      description: The scope of the token.
      enum:
        - account_registry_read
      title: AccountTokenScope
      type: string
    OrganizationUsage:
      description: The usage of an organization.
      properties:
        current_month_remote_cache_hits:
          description: The number of remote cache hits in the current month
          type: number
      required:
        - current_month_remote_cache_hits
      title: OrganizationUsage
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.OrganizationUsage
    PreviewsIndex:
      properties:
        previews:
          description: Previews list.
          items:
            $ref: '#/components/schemas/Preview'
          type: array
      required:
        - previews
      title: PreviewsIndex
      type: object
    ArtifactUploadURL:
      description: The URL to upload an artifact.
      properties:
        expires_at:
          description: The UNIX timestamp when the URL expires.
          type: integer
        url:
          description: The URL to upload the artifact.
          type: string
      required:
        - url
        - expires_at
      title: ArtifactUploadURL
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.ArtifactUploadURL
    DeviceCodeAuthenticationTokens:
      description: Token to authenticate the user with.
      properties:
        access_token:
          description: A short-lived token to authenticate API requests as user.
          type: string
        refresh_token:
          description: A token to generate new access tokens when they expire.
          type: string
        token:
          deprecated: true
          description: User authentication token
          type: string
      title: DeviceCodeAuthenticationTokens
      type: object
    AbsentCacheArtifact:
      properties:
        error:
          items:
            properties:
              code:
                default: not_found
                type: string
              message:
                type: string
            type: object
          type: array
      title: AbsentCacheArtifact
      type: object
    Error:
      properties:
        message:
          description: The error message
          type: string
      required:
        - message
      title: Error
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.Error
    CacheArtifactExistence:
      description: The artifact exists in the cache and can be downloaded
      properties:
        data:
          properties: {}
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      title: CacheArtifactExistence
      type: object
    ArtifactMultipartUploadURL:
      description: The URL to upload a multipart part
      properties:
        data:
          properties:
            url:
              description: The URL to upload the part
              type: string
          required:
            - url
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      required:
        - status
        - data
      title: ArtifactMultipartUploadURL
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.ArtifactMultipartUploadUrl
    CacheArtifactMultipartUploadCompletion:
      description: This response confirms that the upload has been completed successfully. The cache will now be able to serve the artifact.
      properties:
        data:
          properties: {}
          type: object
        status:
          default: success
          enum:
            - success
          type: string
      title: CacheArtifactMultipartUploadCompletion
      type: object
    AuthenticationTokens:
      description: A pair of access token to authenticate requests and refresh token to generate new access tokens when they expire.
      properties:
        access_token:
          description: API access token.
          type: string
        refresh_token:
          description: A token to generate new API access tokens when they expire.
          type: string
      required:
        - access_token
        - refresh_token
      title: AuthenticationTokens
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.AuthenticationTokens
    PreviewIndexPageSize:
      default: 10
      description: The maximum number of preview to return in a single page.
      maximum: 20
      minimum: 1
      title: PreviewIndexPageSize
      type: integer
    User:
      description: A user.
      properties:
        email:
          description: The user's email
          type: string
        id:
          description: The user's unique identifier
          type: number
        name:
          description: The user's name
          type: string
      required:
        - id
        - email
        - name
      title: User
      type: object
      x-struct: Elixir.TuistWeb.API.Schemas.User
  securitySchemes:
    authorization:
      scheme: bearer
      type: http
    cookie:
      in: cookie
      name: _tuist_cloud_key
      type: apiKey
info:
  title: Tuist
  version: 0.1.0
  x-logo:
    altText: Tuist logo
    url: http://localhost:8080/images/open-graph/squared.png
openapi: 3.0.0
paths:
  /api/cache/multipart/complete:
    post:
      callbacks: {}
      description: Given the upload ID and all the parts with their ETags, this endpoint completes the multipart upload. The cache will then be able to serve the artifact.
      operationId: completeCacheArtifactMultipartUpload
      parameters:
        - description: The category of the cache. It's used to differentiate between different types of caches.
          in: query
          name: cache_category
          required: false
          schema:
            $ref: '#/components/schemas/CacheCategory'
        - description: The project identifier '{account_name}/{project_name}'.
          in: query
          name: project_id
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies the artifact in the cache.
          in: query
          name: hash
          required: true
          schema:
            type: string
        - description: The upload ID.
          in: query
          name: upload_id
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                parts:
                  items:
                    properties:
                      etag:
                        description: The ETag of the part
                        type: string
                      part_number:
                        description: The part number
                        type: integer
                    type: object
                  type: array
              type: object
        description: Multi-part upload parts
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                description: This response confirms that the upload has been completed successfully. The cache will now be able to serve the artifact.
                properties:
                  data:
                    properties: {}
                    type: object
                  status:
                    default: success
                    enum:
                      - success
                    type: string
                title: CacheArtifactMultipartUploadCompletion
                type: object
          description: The upload has been completed
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It completes a multi-part upload.
      tags:
        - Cache
  /api/analytics:
    post:
      callbacks: {}
      operationId: createCommandEvent
      parameters:
        - description: The project id.
          in: query
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_id:
                  description: The client id of the command.
                  type: string
                command_arguments:
                  description: The arguments of the command.
                  items:
                    type: string
                  type: array
                duration:
                  description: The duration of the command.
                  type: number
                error_message:
                  description: The error message of the command.
                  type: string
                git_branch:
                  description: The git branch.
                  type: string
                git_commit_sha:
                  description: The commit SHA.
                  type: string
                git_ref:
                  description: The git ref. When on CI, the value can be equal to remote reference such as `refs/pull/1234/merge`.
                  type: string
                git_remote_url_origin:
                  description: The git remote URL origin.
                  type: string
                is_ci:
                  description: Whether the command was run in a CI environment.
                  type: boolean
                macos_version:
                  description: The version of macOS that ran the command.
                  type: string
                name:
                  description: The name of the command.
                  type: string
                params:
                  description: Extra parameters.
                  properties:
                    cacheable_targets:
                      description: A list of cacheable targets.
                      items:
                        type: string
                      type: array
                    local_cache_target_hits:
                      description: A list of local cache target hits.
                      items:
                        type: string
                      type: array
                    local_test_target_hits:
                      description: A list of local targets whose tests were skipped.
                      items:
                        type: string
                      type: array
                    remote_cache_target_hits:
                      description: A list of remote cache target hits.
                      items:
                        type: string
                      type: array
                    remote_test_target_hits:
                      description: A list of remote targets whose tests were skipped.
                      items:
                        type: string
                      type: array
                    test_targets:
                      description: The list of targets that were tested.
                      items:
                        type: string
                      type: array
                  type: object
                preview_id:
                  description: The preview identifier.
                  type: string
                status:
                  description: The status of the command.
                  enum:
                    - success
                    - failure
                  type: string
                subcommand:
                  description: The subcommand of the command.
                  type: string
                swift_version:
                  description: The version of Swift that ran the command.
                  type: string
                tuist_version:
                  description: The version of Tuist that ran the command.
                  type: string
              required:
                - name
                - duration
                - tuist_version
                - swift_version
                - macos_version
                - is_ci
                - client_id
              type: object
        description: Command event params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandEvent'
          description: The command event was created
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You don't have permission to create command events for the project.
      summary: Create a a new command analytics event
      tags:
        - Analytics
  /api/projects/{account_handle}/{project_handle}/previews/start:
    post:
      callbacks: {}
      description: The endpoint returns an upload ID that can be used to generate URLs for the individual parts and complete the upload.
      operationId: startPreviewsMultipartUpload
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bundle_identifier:
                  description: The bundle identifier of the preview.
                  type: string
                display_name:
                  description: The display name of the preview.
                  type: string
                supported_platforms:
                  description: The supported platforms of the preview.
                  items:
                    $ref: '#/components/schemas/PreviewSupportedPlatform'
                  type: array
                type:
                  default: app_bundle
                  description: The type of the preview to upload.
                  enum:
                    - app_bundle
                    - ipa
                  type: string
                version:
                  description: The version of the preview.
                  type: string
              type: object
        description: Preview upload request params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                description: The upload has been initiated and preview and upload unique identifier are returned to upload the various parts using multi-part uploads
                properties:
                  data:
                    description: Data that contains preview and upload unique identifier associated with the multipart upload to use when uploading parts
                    properties:
                      preview_id:
                        description: The id of the preview.
                        type: string
                      upload_id:
                        description: The upload ID
                        type: string
                    required:
                      - upload_id
                      - preview_id
                    type: object
                  status:
                    default: success
                    enum:
                      - success
                    type: string
                required:
                  - status
                  - data
                title: PreviewArtifactUpload
                type: object
          description: The upload has been started
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It initiates a multipart upload for a preview artifact.
      tags:
        - Previews
  /api/auth:
    post:
      callbacks: {}
      description: This endpoint returns API tokens for a given email and password.
      operationId: authenticate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The email to authenticate with.
                  type: string
                password:
                  description: The password to authenticate with.
                  type: string
              required:
                - email
                - password
              type: object
        description: Authentication params.
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTokens'
          description: Successfully authenticated and returned new API tokens.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid email or password.
      summary: Authenticate with email and password.
      tags:
        - Authentication
  /api/auth/refresh_token:
    post:
      callbacks: {}
      description: This endpoint returns new tokens for a given refresh token if the refresh token is valid.
      operationId: refreshToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  description: User refresh token
                  type: string
              required:
                - refresh_token
              type: object
        description: Token params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTokens'
          description: Succcessfully generated new API tokens.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to issue new tokens
      summary: Request new tokens.
      tags:
        - Authentication
  /api/auth/device_code/{device_code}:
    get:
      callbacks: {}
      description: This endpoint returns a token for a given device code if the device code is authenticated.
      operationId: getDeviceCode
      parameters:
        - description: The device code to query.
          in: path
          name: device_code
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                description: Token to authenticate the user with.
                properties:
                  access_token:
                    description: A short-lived token to authenticate API requests as user.
                    type: string
                  refresh_token:
                    description: A token to generate new access tokens when they expire.
                    type: string
                  token:
                    deprecated: true
                    description: User authentication token
                    type: string
                title: DeviceCodeAuthenticationTokens
                type: object
          description: The device code is authenticated
        202:
          content:
            application/json:
              schema:
                type: object
          description: The device code is not authenticated
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was not accepted, e.g., when the device code is expired
      summary: Get a specific device code.
      tags:
        - Authentication
  /api/runs/{run_id}/start:
    post:
      callbacks: {}
      description: The endpoint returns an upload ID that can be used to generate URLs for the individual parts and complete the upload.
      operationId: startAnalyticsArtifactMultipartUpload
      parameters:
        - description: The id of the command event.
          in: path
          name: run_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandEventArtifact'
        description: Artifact to upload
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactUploadID'
          description: The upload has been started
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The command event doesn't exist
      summary: It initiates a multipart upload for a command event artifact.
      tags:
        - Analytics
  /api/projects:
    get:
      callbacks: {}
      operationId: listProjects
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  projects:
                    items:
                      $ref: '#/components/schemas/Project'
                    type: array
                required:
                  - projects
                type: object
          description: List of projects
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
      summary: List projects the authenticated user has access to.
      tags:
        - Projects
    post:
      callbacks: {}
      operationId: createProject
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                full_handle:
                  description: The full handle of the project that should be created.
                  example: tuist/tuist
                  type: string
                name:
                  deprecated: true
                  description: The name of the project that should be created.
                  type: string
                organization:
                  deprecated: true
                  description: Organization to create the project with. If not specified, the project will be created with the current user's personal account.
                  type: string
              type: object
        description: Projects params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project was created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account was not found
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
      summary: Create a new project.
      tags:
        - Projects
  /api/projects/{account_handle}/{project_handle}/tokens:
    get:
      callbacks: {}
      description: This endpoint returns all tokens for a given project.
      operationId: listProjectTokens
      parameters:
        - description: The account handle.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The project handle.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                description: A list of project tokens.
                properties:
                  tokens:
                    items:
                      $ref: '#/components/schemas/ProjectToken'
                    type: array
                required:
                  - tokens
                title: Tokens
                type: object
          description: A list of project tokens.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to list tokens
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authorized to list tokens
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project was not found
      summary: List all project tokens.
      tags:
        - Project tokens
    post:
      callbacks: {}
      description: This endpoint returns a new project token.
      operationId: createProjectToken
      parameters:
        - description: The account handle.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The project handle.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                description: A new project token.
                properties:
                  token:
                    description: The generated project token.
                    type: string
                required:
                  - token
                title: ProjectFullToken
                type: object
          description: A project token was generated
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to issue new tokens
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authorized to issue new tokens
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project was not found
      summary: Create a new project token.
      tags:
        - Project tokens
  /api/organizations/{organization_name}/usage:
    get:
      callbacks: {}
      description: Returns the usage of the organization with the given identifier. (e.g. number of remote cache hits)
      operationId: showOrganizationUsage
      parameters:
        - description: The name of the organization to show.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUsage'
          description: The organization usage
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization with the given name was not found
      summary: Shows the usage of an organization
      tags:
        - Organizations
  /api/cache/multipart/start:
    post:
      callbacks: {}
      description: The endpoint returns an upload ID that can be used to generate URLs for the individual parts and complete the upload.
      operationId: startCacheArtifactMultipartUpload
      parameters:
        - description: The category of the cache. It's used to differentiate between different types of caches.
          in: query
          name: cache_category
          required: false
          schema:
            $ref: '#/components/schemas/CacheCategory'
        - description: The project identifier '{account_name}/{project_name}'.
          in: query
          name: project_id
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies the artifact in the cache.
          in: query
          name: hash
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactUploadID'
          description: The upload has been started
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It initiates a multipart upload in the cache.
      tags:
        - Cache
  /api/projects/{account_handle}/{project_handle}/cache/ac/{hash}:
    get:
      callbacks: {}
      description: This endpoint gets an item from the action cache.
      operationId: getCacheActionItem
      parameters:
        - description: The name of the account that the project belongs to.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The name of the project the cache action item belongs to.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies an item in the action cache.
          in: path
          name: hash
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheActionItem'
          description: The item exists in the action cache
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The item doesn't exist in the actino cache
      summary: Get a cache action item.
      tags:
        - Cache
  /api/cache/multipart/generate-url:
    post:
      callbacks: {}
      description: Given an upload ID and a part number, this endpoint returns a signed URL that can be used to upload a part of a multipart upload. The URL is short-lived and expires in 120 seconds.
      operationId: generateCacheArtifactMultipartUploadURL
      parameters:
        - description: The category of the cache. It's used to differentiate between different types of caches.
          in: query
          name: cache_category
          required: false
          schema:
            $ref: '#/components/schemas/CacheCategory'
        - description: The size in bytes of the part that will be uploaded. It's used to generate the signed URL.
          in: query
          name: content_length
          required: false
          schema:
            type: integer
        - description: The project identifier '{account_name}/{project_name}'.
          in: query
          name: project_id
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies the artifact in the cache.
          in: query
          name: hash
          required: true
          schema:
            type: string
        - description: The part number of the multipart upload.
          in: query
          name: part_number
          required: true
          schema:
            type: integer
        - description: The upload ID.
          in: query
          name: upload_id
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactMultipartUploadURL'
          description: The URL has been generated
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It generates a signed URL for uploading a part.
      tags:
        - Cache
  /api/projects/{account_handle}/{project_handle}/cache/ac:
    post:
      callbacks: {}
      description: The endpoint caches a given action item without uploading a file. To upload files, use the multipart upload instead.
      operationId: uploadCacheActionItem
      parameters:
        - description: The name of the account that the project belongs to.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The name of the project to clean cache for
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hash:
                  description: The hash of the cache action item.
                  type: string
              title: CacheActionItemUploadParams
              type: object
        description: Cache action item upload params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheActionItem'
          description: The request is valid but the cache action item already exists
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheActionItem'
          description: The action item was cached
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request has missing or invalid parameters
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It uploads a given cache action item.
      tags:
        - Cache
  /api/organizations/{organization_name}:
    delete:
      callbacks: {}
      description: Deletes the organization with the given name.
      operationId: deleteOrganization
      parameters:
        - description: The name of the organization to delete.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      responses:
        204:
          description: The organization was deleted
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization with the given name was not found
      summary: Deletes an organization
      tags:
        - Organizations
    get:
      callbacks: {}
      description: Returns the organization with the given identifier.
      operationId: showOrganization
      parameters:
        - description: The name of the organization to show.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: The organization
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization with the given name was not found
      summary: Shows an organization
      tags:
        - Organizations
    patch:
      callbacks: {}
      description: Updates an organization with given parameters.
      operationId: updateOrganization (2)
      parameters:
        - description: The name of the organization to update.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_organization_id:
                  description: The SSO organization ID to be associated with the SSO provider
                  nullable: true
                  type: string
                sso_provider:
                  description: The SSO provider to set up for the organization
                  enum:
                    - google
                    - okta
                    - none
                  type: string
              type: object
        description: Organization update params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: The organization
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization could not be updated due to a validation error
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization with the given name was not found
      summary: Updates an organization
      tags:
        - Organizations
    put:
      callbacks: {}
      description: Updates an organization with given parameters.
      operationId: updateOrganization
      parameters:
        - description: The name of the organization to update.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_organization_id:
                  description: The SSO organization ID to be associated with the SSO provider
                  nullable: true
                  type: string
                sso_provider:
                  description: The SSO provider to set up for the organization
                  enum:
                    - google
                    - okta
                    - none
                  type: string
              type: object
        description: Organization update params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: The organization
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization could not be updated due to a validation error
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization with the given name was not found
      summary: Updates an organization
      tags:
        - Organizations
  /api/projects/{account_handle}/{project_handle}/previews/generate-url:
    post:
      callbacks: {}
      description: Given an upload ID and a part number, this endpoint returns a signed URL that can be used to upload a part of a multipart upload. The URL is short-lived and expires in 120 seconds.
      operationId: generatePreviewsMultipartUploadURL
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                multipart_upload_part:
                  $ref: '#/components/schemas/ArtifactMultipartUploadPart'
                preview_id:
                  description: The id of the preview.
                  type: string
              required:
                - multipart_upload_part
                - preview_id
              type: object
        description: Artifact to generate a signed URL for
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactMultipartUploadURL'
          description: The URL has been generated
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It generates a signed URL for uploading a part.
      tags:
        - Previews
  /api/accounts/{account_handle}/tokens:
    post:
      callbacks: {}
      description: This endpoint returns a new account token.
      operationId: createAccountToken
      parameters:
        - description: The account handle.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: The request to create a new account token.
              properties:
                scopes:
                  description: The scopes for the new account token.
                  items:
                    description: The scope of the token.
                    enum:
                      - account_registry_read
                    title: AccountTokenScope
                    type: string
                  type: array
              required:
                - scopes
              title: AccountTokenRequest
              type: object
        description: Create account token params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                description: A new account token.
                properties:
                  token:
                    description: The generated account token.
                    type: string
                required:
                  - token
                title: AccountFullToken
                type: object
          description: An account token was generated
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to issue new tokens
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authorized to issue new tokens
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account was not found
      summary: Create a new account token.
      tags: []
  /api/runs/{run_id}/generate-url:
    post:
      callbacks: {}
      description: Given an upload ID and a part number, this endpoint returns a signed URL that can be used to upload a part of a multipart upload. The URL is short-lived and expires in 120 seconds.
      operationId: generateAnalyticsArtifactMultipartUploadURL
      parameters:
        - description: The id of the command event.
          in: path
          name: run_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command_event_artifact:
                  $ref: '#/components/schemas/CommandEventArtifact'
                multipart_upload_part:
                  $ref: '#/components/schemas/ArtifactMultipartUploadPart'
              required:
                - command_event_artifact
                - multipart_upload_part
              type: object
        description: Artifact to generate a signed URL for
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactMultipartUploadURL'
          description: The URL has been generated
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
      summary: It generates a signed URL for uploading a part.
      tags:
        - Analytics
  /api/projects/{account_handle}/{project_handle}/cache/clean:
    put:
      callbacks: {}
      operationId: cleanCache
      parameters:
        - description: The name of the account that the project belongs to.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The name of the project to clean cache for
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      responses:
        204:
          description: The cache has been successfully cleaned
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project was not found
      summary: Cleans cache for a given project
      tags:
        - Cache
  /api/organizations/{organization_name}/invitations:
    delete:
      callbacks: {}
      description: Cancels an invitation for a given invitee email and an organization.
      operationId: cancelInvitation
      parameters:
        - description: The name of the organization.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invitee_email:
                  description: The email of the invitee.
                  type: string
              required:
                - invitee_email
              type: object
        description: Invitation params
        required: false
      responses:
        204:
          description: The invitation was cancelled
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The invitation with the given invitee email and organization name was not found
      summary: Cancels an invitation
      tags:
        - Invitations
    post:
      callbacks: {}
      description: Invites a user with a given email to a given organization.
      operationId: createInvitation
      parameters:
        - description: The name of the organization.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invitee_email:
                  description: The email of the invitee.
                  type: string
              required:
                - invitee_email
              type: object
        description: Invitation params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: The user was invited
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The user could not be invited due to a validation error
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization was not found
      summary: Creates an invitation
      tags:
        - Invitations
  /api/projects/{account_handle}/{project_handle}/previews:
    get:
      callbacks: {}
      description: This endpoint returns a list of previews for a given project.
      operationId: listPreviews
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
        - description: The display name of previews.
          in: query
          name: display_name
          required: false
          schema:
            type: string
        - description: The preview version specifier. Currently, accepts a commit SHA, branch name, or latest.
          in: query
          name: specifier
          required: false
          schema:
            type: string
        - description: ''
          in: query
          name: supported_platforms
          required: false
          schema:
            description: The supported platforms of the preview.
            items:
              $ref: '#/components/schemas/PreviewSupportedPlatform'
            type: array
        - description: ''
          in: query
          name: page_size
          required: false
          schema:
            default: 10
            description: The maximum number of preview to return in a single page.
            maximum: 20
            minimum: 1
            title: PreviewIndexPageSize
            type: integer
        - description: ''
          in: query
          name: page
          required: false
          schema:
            default: 1
            description: The page number to return.
            minimum: 1
            title: PreviewIndexPage
            type: integer
        - description: Distinct fields – no two previews will be returned with this field having the same value.
          in: query
          name: distinct_field
          required: false
          schema:
            enum:
              - bundle_identifier
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  previews:
                    description: Previews list.
                    items:
                      $ref: '#/components/schemas/Preview'
                    type: array
                required:
                  - previews
                title: PreviewsIndex
                type: object
          description: Successful response for listing previews.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
      summary: List previews.
      tags:
        - Previews
  /api/cache:
    get:
      callbacks: {}
      description: This endpoint returns a signed URL that can be used to download an artifact from the cache.
      operationId: downloadCacheArtifact
      parameters:
        - description: The category of the cache. It's used to differentiate between different types of caches.
          in: query
          name: cache_category
          required: false
          schema:
            $ref: '#/components/schemas/CacheCategory'
        - description: The project identifier '{account_name}/{project_name}'.
          in: query
          name: project_id
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies the artifact in the cache.
          in: query
          name: hash
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheArtifactDownloadURL'
          description: The artifact exists and is downloadable
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project or the cache artifact doesn't exist
      summary: Downloads an artifact from the cache.
      tags:
        - Cache
  /api/runs/{run_id}/complete:
    post:
      callbacks: {}
      description: Given the upload ID and all the parts with their ETags, this endpoint completes the multipart upload.
      operationId: completeAnalyticsArtifactMultipartUpload
      parameters:
        - description: The id of the command event.
          in: path
          name: run_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command_event_artifact:
                  $ref: '#/components/schemas/CommandEventArtifact'
                multipart_upload_parts:
                  $ref: '#/components/schemas/ArtifactMultipartUploadParts'
              required:
                - command_event_artifact
                - multipart_upload_parts
              type: object
        description: Command event artifact multipart upload completion
        required: false
      responses:
        204:
          description: The upload has been completed
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project doesn't exist
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error occurred
      summary: It completes a multi-part upload.
      tags:
        - Analytics
  /api/organizations:
    get:
      callbacks: {}
      description: Returns all the organizations the authenticated subject is part of.
      operationId: listOrganizations
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                description: The list of organizations the authenticated subject is part of.
                properties:
                  organizations:
                    items:
                      $ref: '#/components/schemas/Organization'
                    type: array
                required:
                  - organizations
                title: OrganizationList
                type: object
          description: The list of organizations
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
      summary: Lists the organizations
      tags:
        - Organizations
    post:
      callbacks: {}
      description: Creates an organization with the given name.
      operationId: createOrganization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the organization that should be created.
                  type: string
              required:
                - name
              type: object
        description: Organization params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: The organization was created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization could not be created due to a validation error
      summary: Creates an organization
      tags:
        - Organizations
  /api/projects/{account_handle}/{project_handle}/previews/{preview_id}:
    get:
      callbacks: {}
      description: This endpoint returns a preview with a given id, including the url to download the preview.
      operationId: downloadPreview
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
        - description: The id of the preview.
          in: path
          name: preview_id
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preview'
          description: The preview exists and can be downloaded
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The preview does not exist
      summary: Returns a preview with a given id.
      tags:
        - Previews
  /api/cache/exists:
    get:
      callbacks: {}
      deprecated: true
      description: This endpoint checks if an artifact exists in the cache. It returns a 404 status code if the artifact does not exist.
      operationId: cacheArtifactExists
      parameters:
        - description: The category of the cache. It's used to differentiate between different types of caches.
          in: query
          name: cache_category
          required: false
          schema:
            $ref: '#/components/schemas/CacheCategory'
        - description: The project identifier '{account_name}/{project_name}'.
          in: query
          name: project_id
          required: true
          schema:
            type: string
        - description: The hash that uniquely identifies the artifact in the cache.
          in: query
          name: hash
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                description: The artifact exists in the cache and can be downloaded
                properties:
                  data:
                    properties: {}
                    type: object
                  status:
                    default: success
                    enum:
                      - success
                    type: string
                title: CacheArtifactExistence
                type: object
          description: The artifact exists
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        402:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The account has an invalid plan
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                properties:
                  error:
                    items:
                      properties:
                        code:
                          default: not_found
                          type: string
                        message:
                          type: string
                      type: object
                    type: array
                title: AbsentCacheArtifact
                type: object
          description: The artifact doesn't exist
      summary: It checks if an artifact exists in the cache.
      tags:
        - Cache
  /api/projects/{account_handle}/{project_handle}/tokens/{id}:
    delete:
      callbacks: {}
      operationId: revokeProjectToken
      parameters:
        - description: The account handle.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The project handle.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
        - description: The ID of the project token
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        204:
          description: The project token was revoked
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The provided token ID is not valid
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project token was not found
      summary: Revokes a project token.
      tags:
        - Project tokens
  /api/projects/{account_handle}/{project_handle}:
    get:
      callbacks: {}
      operationId: showProject
      parameters:
        - description: The name of the account that the project belongs to.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The name of the project to show
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project to show
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project was not found
      summary: Returns a project based on the handle.
      tags:
        - Projects
    put:
      callbacks: {}
      description: Updates a project with given parameters.
      operationId: updateProject
      parameters:
        - description: The handle of the project's account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project to update.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_branch:
                  description: The default branch for the project.
                  type: string
                repository_url:
                  description: The repository URL for the project.
                  type: string
                visibility:
                  description: The visibility of the project. Public projects are visible to everyone, private projects are only visible to the project's members.
                  enum:
                    - public
                    - private
                  type: string
              type: object
        description: Project update params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The updated project
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is invalid, for example when attempting to link the project to a repository the authenticated user doesn't have access to.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project with the given account and project handles was not found
      summary: Updates a project
      tags:
        - Projects
  /api/organizations/{organization_name}/members/{user_name}:
    delete:
      callbacks: {}
      description: Removes a member with a given username from a given organization
      operationId: removeOrganizationMember
      parameters:
        - description: The name of the organization to remove the member from.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
        - description: The name of the user to remove from the organization.
          in: path
          name: user_name
          required: true
          schema:
            type: string
      responses:
        204:
          content:
            application/json: {}
          description: The member was removed
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The member could not be removed due to a validation error
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization or the user with the given name was not found
      summary: Removes a member from an organization
      tags:
        - Organizations
    put:
      callbacks: {}
      description: Updates a member in a given organization
      operationId: updateOrganizationMember
      parameters:
        - description: The name of the organization to update the member in.
          in: path
          name: organization_name
          required: true
          schema:
            type: string
        - description: The name of the user to update in the organization.
          in: path
          name: user_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                role:
                  description: The role to update the member to
                  enum:
                    - admin
                    - user
                  type: string
              required:
                - role
              type: object
        description: Member update params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: The member was updated
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The member could not be updated due to a validation error
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The organization or the user with the given name was not found
      summary: Updates a member in an organization
      tags:
        - Organizations
  /api/projects/{account_handle}/{project_handle}/previews/{preview_id}/icons:
    post:
      callbacks: {}
      description: The endpoint uploads a preview icon.
      operationId: uploadPreviewIcon
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
        - description: The preview identifier.
          in: path
          name: preview_id
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactUploadURL'
          description: The presigned upload URL
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project or preview doesn't exist
      summary: Uploads a preview icon.
      tags:
        - Previews
  /api/projects/{account_handle}/{project_handle}/previews/complete:
    post:
      callbacks: {}
      description: Given the upload ID and all the parts with their ETags, this endpoint completes the multipart upload.
      operationId: completePreviewsMultipartUpload
      parameters:
        - description: The handle of the account.
          in: path
          name: account_handle
          required: true
          schema:
            type: string
        - description: The handle of the project.
          in: path
          name: project_handle
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: The request body to complete the multipart upload of a preview.
              properties:
                multipart_upload_parts:
                  $ref: '#/components/schemas/ArtifactMultipartUploadParts'
                preview_id:
                  description: The id of the preview.
                  type: string
              required:
                - multipart_upload_parts
                - preview_id
              type: object
        description: preview multipart upload completion
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preview'
          description: The upload has been completed
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project or preview doesn't exist
      summary: It completes a multi-part upload.
      tags:
        - Previews
  /api/projects/{id}:
    delete:
      callbacks: {}
      operationId: deleteProject
      parameters:
        - description: The id of the project to delete.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: The project was successfully deleted.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project was not found
      summary: Deletes a project with a given id.
      tags:
        - Projects
  /api/runs/{run_id}/complete_artifacts_uploads:
    put:
      callbacks: {}
      description: Given a command event, it marks all artifact uploads as finished and does extra processing of a given command run, such as test flakiness detection.
      operationId: completeAnalyticsArtifactsUploads
      parameters:
        - description: The id of the command event.
          in: path
          name: run_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                modules:
                  description: A list of modules with their metadata.
                  items:
                    $ref: '#/components/schemas/Module'
                  type: array
              required:
                - modules
              type: object
        description: Extra metadata for the post-processing of a command event.
        required: false
      responses:
        204:
          description: The command event artifact uploads were successfully finished
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You need to be authenticated to access this resource
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated subject is not authorized to perform this action
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The command event doesn't exist
      summary: Completes artifacts uploads for a given command event
      tags:
        - Analytics
security:
  - authorization: []
  - cookie: []
servers:
  - url: http://localhost:8080
    variables: {}
tags: []
